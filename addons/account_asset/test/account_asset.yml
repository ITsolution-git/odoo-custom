-
  In order to test Account Asset feature first I create Asset Category
- 
  I Create an Asset Category Record
- 
  !record {model: account.asset.category, id: account_asset_category_landbuildings0}:
    account_asset_id: account.xfa
    account_depreciation_id: account.xfa
    account_expense_depreciation_id: account.a_expense
    journal_id: account.expenses_journal
    name: Land & Buildings
- 
  I Create an Account Asset Record
- 
  !record {model: account.asset.asset, id: account_asset_asset_Land0}:
    category_id: account_asset_category_landbuildings0
    code: a
    name: Land
    partner_id: base.res_partner_14
    period_id: account.period_6
    purchase_value: 5000.0
    salvage_value: 2000.0
    state: draft
-
  I check Initially that Account Asset is in the "Draft" state
-
  !assert {model: account.asset.asset, id: account_asset_asset_Land0}:
    - state == 'draft'
-
  I Confirm Account Asset using Confirm Asset button
-
  !python {model: account.asset.asset}: |
    self.validate(cr, uid, [ref("account_asset_asset_Land0")])
-
  I Compute Account Asset using Compute button and check the number of depreciation lines created are proper
-
  !python {model: account.asset.asset}: |
    self.compute_depreciation_board(cr, uid, [ref("account_asset_asset_Land0")])
    value = self.browse(cr, uid, [ref("account_asset_asset_Land0")])[0]
    assert value.method_delay == len(value.depreciation_line_ids)
-
  I Create Account Asset Move using using create move method
-
  !python {model: account.asset.depreciation.line}: |
    ids = self.search(cr, uid, [('asset_id','=',ref('account_asset_asset_Land0'))])
    self.create_move(cr, uid, ids)
-
  I Check that After creating all the moves of the asset the state is in "Close" state
-
  !assert {model: account.asset.asset, id: account_asset_asset_Land0}:
    - state == 'close'
