<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>

        <!--NOTE: Will have to test all-->
        <!--NOTE: if we have to get no of votes on any post than we are using vote_count at this time-->
        <record id="badge_1" model="gamification.badge">
            <field name="name">Autobiographer</field>
            <field name="description">Completed own biography</field>
            <field name="level">bronze</field>
        </record>

        <record model="gamification.goal.definition" id="definition_configure_profile">
            <field name="name">Completed own biography</field>
            <field name="description">Write some information about your self</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('base.model_res_users')" />
            <field name="domain">[('id','=',user.id),
                ('partner_id.country_id', '!=', False),
                ('partner_id.city', '!=', False),
                ('partner_id.email', '!=', False)]
            </field>
            <field name="condition">lower</field>
        </record>

        <record model="gamification.challenge" id="challenge_configure_profile">
            <field name="name">Complete own biography</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_1')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_configure_profile">
            <field name="definition_id" eval="ref('definition_configure_profile')" />
            <field name="target_goal">0</field>
            <field name="challenge_id" eval="ref('challenge_configure_profile')" />
        </record>

        <record id="badge_3" model="gamification.badge">
            <field name="name">Cleanup</field>
            <field name="description">First rollback</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_cleanup">
            <field name="name">Cleanup</field>
            <field name="description">Edit answer or question</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post_history')" />
            <field name="domain">[('user_id','=',user.id), '|', ('name','!=',False), ('content','!=',False)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_cleanup">
            <field name="name">Cleanup</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_3')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_cleanup">
            <field name="definition_id" eval="ref('definition_cleanup')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_cleanup')" />
        </record>

        <record id="badge_4" model="gamification.badge">
            <field name="name">Commentator</field>
            <field name="description">Posted 10 comments</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_commentator">
            <field name="name">Commentator</field>
            <field name="description">commente on answer or question(Poste 10 comments)</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('mail.model_mail_message')" />
            <field name="domain">[('author_id','=',user.id), ('type', '=', 'comment')]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_commentator">
            <field name="name">Commentator</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_4')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_commentator">
            <field name="definition_id" eval="ref('definition_commentator')" />
            <field name="target_goal">10</field>
            <field name="challenge_id" eval="ref('challenge_commentator')" />
        </record>

        <record id="badge_5" model="gamification.badge">
            <field name="name">Critic</field>
            <field name="description">First downvote</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_critic">
            <field name="name">Critic</field>
            <field name="description">First downvote</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post_vote')" />
            <field name="domain">[('user_id','=',user.id), ('vote', '=', '-1')]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_critic">
            <field name="name">Critic</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_5')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_critic">
            <field name="definition_id" eval="ref('definition_critic')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_critic')" />
        </record>

        <record id="badge_6" model="gamification.badge">
            <field name="name">Disciplined</field>
            <field name="description">Deleted own post with 3 or more upvotes</field>
            <field name="level">gold</field>
        </record>

        <!--TODO: need to some what on post that on delete it should not delete from db,
         it should shange boolean field?. at this time we are showing post with 3 vote(not deleted)
        -->
        <record model="gamification.goal.definition" id="definition_disciplined">
            <field name="name">Discipline</field>
            <field name="description">Delete own post with 3 or more upvotes</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('vote_count', '>=', 3)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_disciplined">
            <field name="name">Disciplined</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_6')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_disciplined">
            <field name="definition_id" eval="ref('definition_disciplined')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_disciplined')" />
        </record>

        <record id="badge_7" model="gamification.badge">
            <field name="name">Editor</field>
            <field name="description">First edit</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_editor">
            <field name="name">Editor</field>
            <field name="description">First edit of answer or question</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post_history')" />
            <field name="domain">[('user_id','=',user.id), '|', ('name','!=',False), ('content','!=',False)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_editor">
            <field name="name">Editor</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_7')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_editor">
            <field name="definition_id" eval="ref('definition_editor')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_editor')" />
        </record>

        <record id="badge_8" model="gamification.badge">
            <field name="name">Enlightened</field>
            <field name="description">First answer was accepted with 3 or more votes</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_enlightened">
            <field name="name">Enlightened</field>
            <field name="description">First answer was accepted with 3 or more votes</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('vote_count', '>=', 3), ('correct', '=', True)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_enlightened">
            <field name="name">Enlightened</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_8')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_enlightened">
            <field name="definition_id" eval="ref('definition_enlightened')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_enlightened')" />
        </record>

        <record id="badge_9" model="gamification.badge">
            <field name="name">Enthusiast</field>
            <field name="description">Voted on questions/answers for 15 days in a row</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_enthusiast">
            <field name="name">Enthusiast</field>
            <field name="description">Vote on questions/answers for 15 days in a row</field>
            <field name="computation_mode">python</field>
            <field name="compute_code">def get_counter(cr, uid, context=None):
    res = 1
    start_date = date.today() - timedelta(days=16)
    end_date = date.today() - timedelta(days=1)
    cr.execute('SELECT COUNT(id), create_date from website_forum_post_vote where create_date &gt;= %s and create_date &lt;= %s and user_id = %s GROUP BY create_date',(start_date,end_date, object.user_id.id,))
    data = cr.dictfetchall()
    if len(data) == 15:
        res += 1
    return res
result = get_counter(cr, uid, context=context)
            </field>
            <field name="display_mode">boolean</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_enthusiast">
            <field name="name">Enthusiast</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_9')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_enthusiast">
            <field name="definition_id" eval="ref('definition_enthusiast')" />
            <field name="target_goal">2</field>
            <field name="challenge_id" eval="ref('challenge_enthusiast')" />
        </record>

        <record id="badge_10" model="gamification.badge">
            <field name="name">Expert</field>
            <field name="description">Posted more than 10 questions or answers in one tag</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_expert">
            <field name="name">Expert</field>
            <field name="description">Post more than 10 questions in one tag</field>
            <field name="computation_mode">python</field>
            <field name="compute_code">def get_counter(cr, uid, context=None):
    res = 1
    Post = self.pool['website.forum.post']
    Tag = self.pool['website.forum.tag']
    for tag in Tag.search(cr, uid, [], context=context):
        post_count = Post.search_count(cr, uid , [('tags', '=', tag), ('user_id', '=', object.user_id.id)], context=context)
        if post_count >= 10:
             res += 1
    return res
result = get_counter(cr, uid, context=context)
            </field>
            <field name="display_mode">boolean</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_expert">
            <field name="name">Expert</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_10')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_expert">
            <field name="definition_id" eval="ref('definition_expert')" />
            <field name="target_goal">2</field>
            <field name="challenge_id" eval="ref('challenge_expert')" />
        </record>

        <record id="badge_11" model="gamification.badge">
            <field name="name">Famous Question</field>
            <field name="description">Asked a question with 500 views</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_famous_question">
            <field name="name">Expert</field>
            <field name="description">Ask a question or give answer which can be viewd 500 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('views', '>=', 500)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_famous_question">
            <field name="name">Expert</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_11')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_famous_question">
            <field name="definition_id" eval="ref('definition_famous_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_famous_question')" />
        </record>

        <record id="badge_12" model="gamification.badge">
            <field name="name">Favorite Question</field>
            <field name="description">Question favorited by 5 users</field>
            <field name="level">silver</field>
        </record>

        <!--NOTE: passing default value 1 for res forumwise it gives error in gamification, will improve in gamification -->
        <record model="gamification.goal.definition" id="definition_favorite_question">
            <field name="name">Favorite Question</field>
            <field name="description">Ask a question which can be favorited by minimum 5 users</field>
            <field name="computation_mode">python</field>
            <field name="compute_code">def count_favorites(cr, uid, context=None):
    res = 1
    Post = self.pool['website.forum.post']
    user_posts = Post.search(cr, uid, [('user_id','=',object.user_id.id), ('parent_id', '=', False)], context=context)
    for post in  Post.browse(cr, uid, user_posts, context=context):
        if len(post.favourite_ids) >= 5:
            res += 1
    return res
result = count_favorites(cr, uid, context=context)
            </field>
            <field name="display_mode">boolean</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_favorite_question">
            <field name="name">Favorite Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_12')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_favorite_question">
            <field name="definition_id" eval="ref('definition_favorite_question')" />
            <field name="target_goal">2</field>
            <field name="challenge_id" eval="ref('challenge_favorite_question')" />
        </record>

        <record id="badge_13" model="gamification.badge">
            <field name="name">Good Answer</field>
            <field name="description">Answer voted up 6 times</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_good_answer">
            <field name="name">Good Answer</field>
            <field name="description">Your answer should voted up 6 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '!=', False), ('vote_count', '>=', 6)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_good_answer">
            <field name="name">Good Answer</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_13')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_good_answer">
            <field name="definition_id" eval="ref('definition_good_answer')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_good_answer')" />
        </record>

        <record id="badge_14" model="gamification.badge">
            <field name="name">Good Question</field>
            <field name="description">Question voted up 6 times</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_good_question">
            <field name="name">Good Question</field>
            <field name="description">Your Question should voted up 6 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('vote_count', '>=', 6)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_good_question">
            <field name="name">Good Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_14')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_good_question">
            <field name="definition_id" eval="ref('definition_good_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_good_question')" />
        </record>

        <record id="badge_15" model="gamification.badge">
            <field name="name">Great Answer</field>
            <field name="description">Answer voted up 15 times</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_great_answer">
            <field name="name">Great Answer</field>
            <field name="description">Your answer should voted up 15 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '!=', False), ('vote_count', '>=', 15)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_great_answer">
            <field name="name">Great Answer</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_15')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_great_answer">
            <field name="definition_id" eval="ref('definition_great_answer')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_great_answer')" />
        </record>

        <record id="badge_16" model="gamification.badge">
            <field name="name">Great Question</field>
            <field name="description">Question voted up 15 times</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_great_question">
            <field name="name">Great Question</field>
            <field name="description">Your Question should voted up 15 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('vote_count', '>=', 15)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_great_question">
            <field name="name">Great Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_16')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_great_question">
            <field name="definition_id" eval="ref('definition_great_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_great_question')" />
        </record>

        <record id="badge_17" model="gamification.badge">
            <field name="name">Guru</field>
            <field name="description">Answer accepted with 15 or more votes</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_guru">
            <field name="name">Guru</field>
            <field name="description">Answer should accepted with 15 or more votes</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '!=', False), ('vote_count', '>=', 15), ('correct', '=', True)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_guru">
            <field name="name">Great Answer</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_17')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_guru">
            <field name="definition_id" eval="ref('definition_guru')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_guru')" />
        </record>

        <record id="badge_18" model="gamification.badge">
            <field name="name">Necromancer</field>
            <field name="description">Answered a question more than 30 days later with at least 2 votes</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_necromancer">
            <field name="name">Necromancer</field>
            <field name="description">Answered a question more than 30 days later with at least 2 votes</field>
            <field name="computation_mode">python</field>
            <field name="compute_code">def get_posts(cr, uid, context=None):
    res = 1
    Post = self.pool['website.forum.post']
    user_posts = Post.search(cr, uid, [('user_id','=',object.user_id.id), ('parent_id', '!=', False), ('vote_count', '>=', 2)], context=context)
    for post in Post.browse(cr, uid, user_posts, context=context):
        print post.parent_id.create_date
        question_date = datetime.strptime(post.parent_id.create_date, "%Y-%m-%d %H:%M:%S")
        answer_date = datetime.strptime(post.create_date, "%Y-%m-%d %H:%M:%S")
        if ((question_date - answer_date).days) >= 30:
            res += 1
    return res
result = get_posts(cr, uid, context=context)
            </field>
            <field name="display_mode">boolean</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_necromancer">
            <field name="name">Necromancer</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_18')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_necromancer">
            <field name="definition_id" eval="ref('definition_necromancer')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_necromancer')" />
        </record>

        <record id="badge_19" model="gamification.badge">
            <field name="name">Nice Answer</field>
            <field name="description">Answer voted up 4 times</field>
            <field name="level">bronze</field>
        </record>

        <record model="gamification.goal.definition" id="definition_nice_answer">
            <field name="name">Nice Answer</field>
            <field name="description">Your answer should voted up 4 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '!=', False), ('vote_count', '>=', 4)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_nice_answer">
            <field name="name">Nice Answer</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_19')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_nice_answer">
            <field name="definition_id" eval="ref('definition_nice_answer')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_nice_answer')" />
        </record>

        <record id="badge_20" model="gamification.badge">
            <field name="name">Nice Quesiotn</field>
            <field name="description">Question voted up 4 times</field>
            <field name="level">bronze</field>
        </record>

        <record model="gamification.goal.definition" id="definition_nice_question">
            <field name="name">Nice Question</field>
            <field name="description">Your Question should voted up 6 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('vote_count', '>=', 6)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_nice_question">
            <field name="name">Nice Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_20')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_nice_question">
            <field name="definition_id" eval="ref('definition_nice_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_nice_question')" />
        </record>

        <record id="badge_21" model="gamification.badge">
            <field name="name">Notable Question</field>
            <field name="description">Asked a question with 250 views</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_notable_question">
            <field name="name">Notable Question</field>
            <field name="description">Your Question should viewed up 250 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('views', '>=', 250)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_notable_question">
            <field name="name">Notable Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_21')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_notable_question">
            <field name="definition_id" eval="ref('definition_notable_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_notable_question')" />
        </record>

        <record id="badge_22" model="gamification.badge">
            <field name="name">Organizer</field>
            <field name="description">First retag</field>
            <field name="level">bronze</field>
        </record>

        <record model="gamification.goal.definition" id="definition_notable_question">
            <field name="name">Organizer</field>
            <field name="description">Your First retag</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post_history')" />
            <field name="domain">[('user_id','=',user.id), ('tags','!=',False)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_notable_question">
            <field name="name">Organizer</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_22')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_notable_question">
            <field name="definition_id" eval="ref('definition_notable_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_notable_question')" />
        </record>

        <record id="badge_23" model="gamification.badge">
            <field name="name">Peer Pressure</field>
            <field name="description">Deleted own post with 3 or more downvotes</field>
            <field name="level">gold</field>
        </record>

        <!--TODO: need to some what on post that on delete it should not delete from db,
         it should shange boolean field?. at this time we are showing post with 3 down vote(not deleted)
        -->
        <record model="gamification.goal.definition" id="definition_peer_pressure">
            <field name="name">Discipline</field>
            <field name="description">Delete own post with 3 or more upvotes</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('vote_count', '>=', -3)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_peer_pressure">
            <field name="name">Disciplined</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_23')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_peer_pressure">
            <field name="definition_id" eval="ref('definition_peer_pressure')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_peer_pressure')" />
        </record>

        <record id="badge_24" model="gamification.badge">
            <field name="name">Popular Question</field>
            <field name="description">Asked a question with 150 views</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_popular_question">
            <field name="name">Popular Question</field>
            <field name="description">Your Question should viewed up 150 times</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('views', '>=', 150)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_popular_question">
            <field name="name">Popular Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_24')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_popular_question">
            <field name="definition_id" eval="ref('definition_popular_question')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_popular_question')" />
        </record>

        <record id="badge_25" model="gamification.badge">
            <field name="name">Pundit</field>
            <field name="description">Left 10 comments with score of 10 or more</field>
            <field name="level">silver</field>
        </record>

        <!--Note: at this time score of 10 means 10 votes taken-->
        <record model="gamification.goal.definition" id="definition_pundit">
            <field name="name">Pundit</field>
            <field name="description">Post 10 comments with score of 10 or more</field>
            <field name="computation_mode">python</field>
            <field name="compute_code">def get_count(cr, uid, context=None):
    res = 1
    Message = self.pool['mail.message']
    Post = self.pool['website.forum.post']
    user_message = Message.read_group(cr, uid,[('create_uid','=',object.user_id.id), ('type', '=', 'comment'), ('model', '=', 'website.forum.post')], ['res_id'], groupby=['res_id'], context=context)
    for rec in user_message:
        if rec.get('res_id_count') >= 10:
            post = Post.browse(cr, uid, rec.get('res_id'), context=context)
            if post.vote_count >= 10:
                 res += 1
    return res
result = get_count(cr, uid, context=context)
            </field>
            <field name="display_mode">boolean</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_pundit">
            <field name="name">Pundit</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_25')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_pundit">
            <field name="definition_id" eval="ref('definition_pundit')" />
            <field name="target_goal">2</field>
            <field name="challenge_id" eval="ref('challenge_pundit')" />
        </record>

        <record id="badge_26" model="gamification.badge">
            <field name="name">Scholar</field>
            <field name="description">Asked a question and accepted an answer</field>
            <field name="level">gold</field>
        </record>

        <!--TODO: add field to show closed state of question or update correct on quetion when any answer accepted.-->
        <record model="gamification.goal.definition" id="definition_scholar">
            <field name="name">Scholar</field>
            <field name="description">Ask a question and accept an answer</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('correct', '=', True)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_scholar">
            <field name="name">Scholar</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_26')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_scholar">
            <field name="definition_id" eval="ref('definition_scholar')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_scholar')" />
        </record>

        <record id="badge_27" model="gamification.badge">
            <field name="name">self-Learner</field>
            <field name="description">Answered own question with at least 4 up votes</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_self_learner">
            <field name="name">self-Learner</field>
            <field name="description">Answere own question with at least 4 up votes</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id),
                ('parent_id', '!=', False),
                ('parent_id.user_id', '!=', user.id),
                ('vote_count', '>=', 4)]
            </field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_self_learner">
            <field name="name">self-Learner</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_27')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_self_learner">
            <field name="definition_id" eval="ref('definition_self_learner')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_self_learner')" />
        </record>

        <record id="badge_28" model="gamification.badge">
            <field name="name">Stellar Question</field>
            <field name="description">Question favorited by 25 users</field>
            <field name="level">bronze</field>
        </record>

        <!--NOTE: passing default value 1 for res forumwise it gives error in gamification, will improve in gamification -->
        <record model="gamification.goal.definition" id="definition_stellar_question">
            <field name="name">Stellar Question</field>
            <field name="description">Ask a question which can be favorited by minimum 25 users</field>
            <field name="computation_mode">python</field>
            <field name="compute_code">def count_favorites(cr, uid, context=None):
    res = 1
    Post = self.pool['website.forum.post']
    user_posts = Post.search(cr, uid, [('user_id','=',object.user_id.id), ('parent_id', '=', False)], context=context)
    for post in  Post.browse(cr, uid, user_posts, context=context):
        if len(post.favourite_ids) >= 25:
            res += 1
    return res
result = count_favorites(cr, uid, context=context)
            </field>
            <field name="display_mode">boolean</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_stellar_question">
            <field name="name">Stellar Question</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_28')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_stellar_question">
            <field name="definition_id" eval="ref('definition_stellar_question')" />
            <field name="target_goal">2</field>
            <field name="challenge_id" eval="ref('challenge_stellar_question')" />
        </record>

        <record id="badge_29" model="gamification.badge">
            <field name="name">Associate Editor</field>
            <field name="description">Edited 30 entries</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_associate_editor">
            <field name="name">Associate Editor</field>
            <field name="description">Edit 30 answer or question</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post_history')" />
            <field name="domain">[('user_id','=',user.id), '|', ('name','!=',False), ('content','!=',False)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_associate_editor">
            <field name="name">Associate Editor</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_29')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_associate_editor">
            <field name="definition_id" eval="ref('definition_associate_editor')" />
            <field name="target_goal">30</field>
            <field name="challenge_id" eval="ref('challenge_associate_editor')" />
        </record>

        <record id="badge_30" model="gamification.badge">
            <field name="name">Student</field>
            <field name="description">Asked first question with at least one up vote</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_student">
            <field name="name">Student</field>
            <field name="description">Ask first question with at least one up vote</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '=', False), ('vote_count', '>=', 1)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_student">
            <field name="name">Student</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_30')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_student">
            <field name="definition_id" eval="ref('definition_student')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_student')" />
        </record>

        <record id="badge_31" model="gamification.badge">
            <field name="name">Supporter</field>
            <field name="description">First upvote</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_supporter">
            <field name="name">Supporter</field>
            <field name="description">First upwnvote</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post_vote')" />
            <field name="domain">[('user_id','=',user.id), ('vote', '=', '1')]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_supporter">
            <field name="name">Supporter</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_31')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_supporter">
            <field name="definition_id" eval="ref('definition_supporter')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_supporter')" />
        </record>

        <record id="badge_32" model="gamification.badge">
            <field name="name">Taxonomist</field>
            <field name="description">Created a tag used by 15 questions</field>
            <field name="level">silver</field>
        </record>

        <record model="gamification.goal.definition" id="definition_taxonomist">
            <field name="name">Taxonomist</field>
            <field name="description">Create a tag which can used in minimum 15 questions</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_tag')" />
            <field name="domain">[('create_uid','=',user.id), ('posts_count', '>=', 15)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_taxonomist">
            <field name="name">Taxonomist</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_32')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_taxonomist">
            <field name="definition_id" eval="ref('definition_taxonomist')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_taxonomist')" />
        </record>

        <record id="badge_33" model="gamification.badge">
            <field name="name">Teacher</field>
            <field name="description">Received at least 3 upvote for an answer for the first time</field>
            <field name="level">gold</field>
        </record>

        <record model="gamification.goal.definition" id="definition_teacher">
            <field name="name">Teacher</field>
            <field name="description">Give answer which can get at least 3 upvote</field>
            <field name="computation_mode">count</field>
            <field name="display_mode">boolean</field>
            <field name="model_id" eval="ref('website_forum.model_website_forum_post')" />
            <field name="domain">[('user_id','=',user.id), ('parent_id', '!=', False), ('vote_count', '>=', 3)]</field>
            <field name="condition">higher</field>
        </record>

        <record model="gamification.challenge" id="challenge_teacher">
            <field name="name">Teacher</field>
            <field name="period">once</field>
            <field name="visibility_mode">personal</field>
            <field name="report_message_frequency">never</field>
            <field name="reward_id" eval="ref('badge_33')" />
            <field name="autojoin_group_id" eval="ref('base.group_user')" />
            <field name="state">inprogress</field>
            <field name="category">forum</field>
        </record>

        <record model="gamification.challenge.line" id="line_teacher">
            <field name="definition_id" eval="ref('definition_teacher')" />
            <field name="target_goal">1</field>
            <field name="challenge_id" eval="ref('challenge_teacher')" />
        </record>

    </data>
</openerp>
