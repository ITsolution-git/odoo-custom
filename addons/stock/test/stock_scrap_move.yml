-
  In order to test the scrap move, I create moves and scrap some quantities from those moves.
-
  !record {model: stock.move, id: stock_move_4}:
    product_id: product.product_product_fan2
    product_qty: 4.0
    location_dest_id: stock.stock_location_customers
    location_id: stock.stock_location_stock
-
  I create a move and scrap some quantities from it.
-
  !python {model: stock.move.scrap}: |
    context = {'active_model':'stock.move', 'active_id': ref('stock_move_4'), 'active_ids': [ref('stock_move_4')]}
    values = self.default_get(cr, uid, ['location_id','product_id','product_uom','product_qty'], context)
    ids = self.create(cr, uid, values)
    self.move_scrap(cr, uid, [ids], context)
-
  I check Scraped Move details.
-
  !python {model: stock.move}: |
    ids = self.search(cr, uid, [('product_id','=',ref('product.product_product_fan2'))])
    for scrap_move in self.browse(cr, uid, ids):
      if scrap_move.product_qty == 4.0 and scrap_move.location_dest_id == ref('stock_location_scrapped'):
        assert scrap_move.state == 'done',"The scraped move should be in Done state"
