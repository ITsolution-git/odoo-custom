-
  In order to test the stock module, I need to create initial physical inventory.
-
  I create a physical inventory and change the product quantity zero by making a physical inventory.
-
   !record {model: stock.inventory, id: stock_physical_inventory0}:
    company_id: base.main_company
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    name: Physical inventory
    state: draft
-
  I define and fill the inventory. Create record using create method.
-
  !python {model: stock.fill.inventory}: |
    vals = {
            'location_id': ref('stock_location_components'),
            'recursive': False,
            'set_stock_zero': True
           } 
    ids = self.create(cr, uid, vals, context)
    context.update({"full": "1", "active_model": "stock.inventory","active_ids": [ids]})
    self.view_init(cr, uid, ["set_stock_zero", "location_id", "recursive"], context)
    inventory_id = context.get('ids')
    self.fill_inventory(cr, uid, inventory_id, context)
-
  I confirm the inventory.
-
  !python {model: stock.inventory}: |
   inventory = self.browse(cr, uid, [ref('stock_physical_inventory0')])[0]
   self.action_confirm(cr,uid,[ref('stock_physical_inventory0')])
   assert inventory.state == 'confirm',"Inventory should be in 'Confirm' state"
   self.action_done(cr,uid,[ref('stock_physical_inventory0')])
   if inventory.inventory_line_id:
     for line in inventory.inventory_line_id:
       assert line.product_qty == 0.0,"Product Quantity should be Zero"
     assert len(inventory.move_ids) >= 1,"Move should be created after confirmed inventory"
     for move in  inventory.move_ids:
       assert move.product_qty == 1.0,"Product quantity of move is not correspond."
       assert move.location_id.id == ref('location_inventory'),"Source location of move should be 'Inventory loss'"
       assert move.location_dest_id.id == ref('stock_location_components'),"Destination location of move is not correspond."
-
  I check the inventory after validation.
-
  !python {model: stock.inventory}: |
   inventory = self.browse(cr, uid, [ref('stock_physical_inventory0')])
   assert inventory[0].state == 'done',"Inventory should be in 'Done' state"
