-
  I cancel unqualified lead.
-
  !python {model: crm.lead}: |
    self.case_cancel(cr, uid, [ref("crm_case_itisatelesalescampaign0")])
-
  I check cancelled lead.
-
  !assert {model: crm.lead, id: crm.crm_case_itisatelesalescampaign0, string: Lead is in cancel state}:
     - state == "cancel"
-
  I reset cancelled lead into unqualified lead.
-
  !python {model: crm.lead}: |
    self.case_reset(cr, uid, [ref("crm_case_itisatelesalescampaign0")])
-
  I check unqualified lead after reset.
-
  !assert {model: crm.lead, id: crm.crm_case_itisatelesalescampaign0, string: Lead is in draft state}:
     - state == "draft"
-
  I put unqualified lead into pending.
-
  !python {model: crm.lead}: |
    self.case_pending(cr, uid, [ref("crm_case_itisatelesalescampaign0")])
-
  I check status of pending lead.
-
  !assert {model: crm.lead, id: crm.crm_case_itisatelesalescampaign0, string: Lead is in pending state}:
     - state == "pending"
-
  I Escalate the Lead to Parent Team.
-
  !python {model: crm.lead}: |
    self.case_escalate(cr, uid, [ref("crm_case_itisatelesalescampaign0")])

-
  I mark as lost the Lead.
-
  !python {model: crm.lead}: |
    self.case_mark_won(cr, uid, [ref("crm_case_itisatelesalescampaign0")])



