-
  Communication by phonecall or mail I got lead from Customer/partner, I test to created lead in initial stage.
-
   !assert {model: crm.lead, id: crm.crm_case_qrecorp0, string: Lead in Draft}:
     - state == "draft"
-
  After some discussion about lead with customer/partner some possibillity to go ahead, so we are opening this lead.
-
   !python {model: crm.lead}: |
     self.case_open(cr, uid, [ref("crm_case_qrecorp0")])
     fields={
            'day_open': 0.0,
            'day_close': 0.0
            }
     self._compute_day(cr, uid, [ref("crm_case_qrecorp0")], fields, context)
- |
  In order to test lead, i will test lead is in open stage.
-
  !assert {model: crm.lead, id: crm.crm_case_qrecorp0, string: Lead in open state}:
     - state == "open"
-
  As the lead seems to be a real business opportunity, I will convert it to a partner
  and a business opportunity.
-
   !python {model: crm.lead}: |
     lead = self.browse(cr, uid, ref('crm_case_qrecorp0'))
     action = self.convert_opportunity(cr, uid, [ref("crm_case_qrecorp0")], {'active_ids': [ref("crm_case_qrecorp0")]})
     assert action['res_model'] == 'crm.lead2opportunity.partner'
-
  In order to create partner, It is possible to check for partner is exiting or i will create new partner 
  according to this lead. so first i will create new partner. 
-
   !record {model: crm.lead2opportunity.partner, id: crm_lead2opportunity_partner_create_0}:
      action: 'create'
      name: 'convert'
-
  In order to create opportunity and its created by new partner.
-
   !python {model: crm.lead2opportunity.partner}: |
      self.action_apply(cr, uid, [ref("crm_lead2opportunity_partner_create_0")], {'active_ids': [ref("crm_case_qrecorp0")], 'active_id': ref("crm_case_qrecorp0")})
-
  In order to test with exiting partner, so i will test with exiting partner and create opportunities based
  on exiting partner. 
-
   !record {model: crm.lead2opportunity.partner, id: crm_lead2opportunity_partner_create_1}:
      action: 'exist'
-
  Create opportunity based on exiting partner
-
   !python {model: crm.lead2opportunity.partner}: |
      self.action_apply(cr, uid, [ref("crm_lead2opportunity_partner_create_1")], {'active_ids': [ref("crm_case_qrecorp0")], 'active_id': ref("crm_case_qrecorp0")})
-
  In order to test with no link wih partner, so i will test create opportunities based
  no link to any partner.
-
  !record {model: crm.lead2opportunity.partner, id: crm_lead2opportunity_partner_create_2}:
    action: 'nothing'
-
  In order to test create opportunity based on no link to any partner.
-
  !python {model: crm.lead2opportunity.partner}: |
    self.action_apply(cr, uid, [ref("crm_lead2opportunity_partner_create_2")], {'active_ids': [ref("crm_case_qrecorp0")], 'active_id': ref("crm_case_qrecorp0")})
-
  In order to test lead, i will test to lead is converted to opportunity.
-
  !python {model: crm.lead}: |
    lead = self.browse(cr, uid, ref("crm_case_qrecorp0"))
    assert lead.type == 'opportunity'
-
  Finally, i won this lead and congratulation we have new partner so i will close this lead.
-
  !python {model: crm.lead}: |
    self.case_close(cr, uid, [ref("crm_case_qrecorp0")])
-
  In order to test lead, i will test its on close or not.
-
  !assert {model: crm.lead, id: crm.crm_case_qrecorp0, string: Lead in done state}:
     - state == "done"
#-
#  |
#  yaml is also not working with smtp server and send new email.

- |
  I configure with smtp server.
- |
  And I communicate with lead through send New mail to Lead using its email address from the user who is logged in.
- |
  I check that communication history generated when send email to lead.
- |
  Then, I add a cc which receive copy of future communication between partner and users by mail.

- |
  I Reply to last Email to lead with some document attached.and check that communication history generated or not.

