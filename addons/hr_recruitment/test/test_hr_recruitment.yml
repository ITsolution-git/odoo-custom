- |
  In order to test hr_recruitment module for OpenERP, I will create applicants form,   Manages job positions and the recruitement process.
- |
  I create job position for employee to manage job position.
-
  |
  For that First I create Department  "R & D" in Department form for which I make recruitment.
- 
  !record {model: hr.department, id: hr_department_rd0}:
    manager_id: base.user_root
    name: 'R & D '
    
- |
  Now I will create new Job Position. I will check successfull creation of new Job Position by adding the information.
- 
  !record {model: hr.job, id: hr_job_jea0}:
    department_id: 'hr_department_rd0'
    description: 'Position of Junier Application Engineer '
    expected_employees: 5
    name: 'JEA '
- |
  Given that I have stage "Initial Jobs Demand".
- 
  !record {model: hr.recruitment.stage, id: hr_recrutiment_stage_first0}:
    name: 'Initial Jobs Demand'
    sequence: 1    
- |
  I create applicants for "Fresher" and specify  job information for that applicant.
- 
  !record {model: hr.applicant, id: hr_applicant_fresher0}:
    availability: 0.0
    department_id: hr.dep_it
    name: Fresher
    partner_address_id: base.res_partner_address_tang
    partner_id: base.res_partner_asus
    partner_name: Jose
    partner_phone: '999666735'
    response: 0.0
    salary_expected: 0.0
    salary_proposed: 0.0
    stage_id: crm.stage_lead3
    type_id: hr_recruitment.type_job2
    stage_id:  hr_recrutiment_stage_first0
    
- |
  I check that applicant  is on "draft" state.
-
  !assert {model: hr.applicant, id:  hr_applicant_fresher0}:
    - state == 'draft'  
    
- |
  I  start progress by click on "In Progress" button.
- 
  !python {model: hr.applicant}: |
    self.case_open(cr, uid, [ref("hr_applicant_fresher0")], {"active_ids": [ref("hr_recruitment.menu_crm_case_categ0_act_job")],
      }) 

- |
  Given that I have case category "Employee".
-
  !record {model: crm.case.categ, id: crm_case_categ_employee0}:
    name: 'Employee'
      
- |
  I make  phonecall for this applicant by click on "Schedule a Phone Call" button.
-
  !record {model: hr.recruitment.job2phonecall, id: hr_recruitment_forinterview0}: 
    user_id: base.user_root
    deadline: '05/28/2010 11:51:00'
    note: 'For interview.'
    category_id: 'crm_case_categ_employee0'
      
- |
  I click on "Schedule phonecall" button of this wizard.
-
  !python {model: hr.recruitment.job2phonecall}: |
     self.make_phonecall(cr, uid, [ref('hr_recruitment_forinterview0')], {'active_ids': [ref('hr_applicant_fresher0')]})  
  
- |
  I schedule meeting for interview of this applicant by click on "Schdule Meeting" button.
- 
  !python {model: hr.applicant}: |
     self.action_makeMeeting(cr, uid, [ref('hr_recruitment_forinterview0')])
-  |
   I can see that Meeting's calendar view is shown.
   then I click on the date on which I want schedule meeting.
   I fill proper data for that meeting and save it.
- 
  !record {model: crm.meeting, id: crm_meeting_fresher0}:
    alarm_id: base_calendar.alarm1
    count: 0.0
    date: '2010-05-27 00:00:00'
    date_deadline: '2010-05-27 08:00:00'
    day: 0.0
    duration: 8.0
    name: Fresher
    opportunity_id: crm.crm_case_construstazunits0
    partner_address_id: base.res_partner_address_tang
    partner_id: base.res_partner_asus
    recurrent_uid: 0.0
    rrule_type: none
    state: open
    user_id: base.user_root
    
- |
  After Meeting of this applicant , I hired employee by click on "Hired" button of this form.
- 
  !python {model: hr.applicant}: |
     self.case_close(cr, uid, [ref('hr_applicant_fresher0')])
- |
  I check that applicant state is "done".
-
  !assert {model: hr.applicant, id: hr_applicant_fresher0}:
    - state == 'done'
  