-
  In order to test the PDF reports defined on a Point Of Sale,we will print a POS Detail Summary Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.pos.details_summary').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-details_summary report'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on a Point Of Sale, we will print a POS Invoice Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.pos.invoice').create(cr, uid, [ref('point_of_sale.pos_order_pos11')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-invoice report'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on a Point Of Sale, we will print a POS Lines Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.pos.lines').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-lines report'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Receipt Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.pos.receipt').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-receipt report'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Receipt With Reimbursement Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.pos.receipt.with.remboursment').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-receipt with reimbursement report'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on a point of sale, we will print a POS Receipt Without Reimbursement Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.pos.receipt.without.remboursment').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-receipt without reimbursement report'+format), 'wb+').write(data)

-
 Print the POS Payment Report through the wizard
-
  !python {model: ir.ui.menu}: |
    import time
    ctx={}
    ctx.update({'model': 'ir.ui.menu','active_ids': []})
    data_dict = {'date_start': time.strftime('%Y-%m-%d'), 'date_end': time.strftime('%Y-%m-%d'), 'user_id': [(6,0,[ref('base.user_root')])] }
    from tools import test_reports
    test_reports.try_report_action(cr, uid, 'action_report_pos_payment_repport_date',wiz_data=data_dict, context=ctx, our_module='point_of_sale')

-
 Print the POS Details Report through the wizard
-
  !python {model: ir.ui.menu}: |
    import time
    ctx={}
    ctx.update({'model': 'ir.ui.menu','active_ids': []})
    data_dict = {'date_start': time.strftime('%Y-%m-%d'), 'date_end': time.strftime('%Y-%m-%d')}
    from tools import test_reports
    test_reports.try_report_action(cr, uid, 'action_report_pos_details',wiz_data=data_dict, context=ctx, our_module='point_of_sale')

-
  I create a cash journal.
-
  !record {model: account.journal, id: account_journal_cash0}:
    name: 'Cash Journal'
    code: 'CSJ'
    type: 'cash'
    view_id: account.account_journal_bank_view
    sequence_id: account.sequence_journal
-
  I create a record for Bank Statement.
-
  !record {model: account.bank.statement, id: account_bank_statement_st0}:
    name: St.05/19
    balance_end_real: 0.0
    date: !eval time.strftime('%Y-%m-%d')
    journal_id: account_journal_cash0
    line_ids:
        - name: statement
          date: !eval "(datetime.now()+timedelta(5*365/12)).strftime('%Y-%m-%d')"
          type: customer
          account_id: account_pos_account_sales
          amount: 100
          partner_id: base.res_partner_agrolait
    period_id: account.period_5
    state: 'draft'
-
  In order to test the PDF reports defined on a Point Of Sale, we will print a Account Statement Report
-
  !python {model: account.bank.statement}: |
    import netsvc, tools, os, time
    (data, format) = netsvc.LocalService('report.account.statement').create(cr, uid, [ref('point_of_sale.account_bank_statement_st0')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-account_statement_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point Of Sale, we will print a POS User Product Report
-
  !python {model: account.bank.statement}: |
    import netsvc, tools, os, time
    (data, format) = netsvc.LocalService('report.pos.user.product').create(cr, uid, [ref('point_of_sale.account_bank_statement_st0')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-user_product_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point Of Sale, we will print a POS All Close Cashbox Of the Day Report
-
  !python {model: account.bank.statement}: |
    import netsvc, tools, os, time
    (data, format) = netsvc.LocalService('report.all.closed.cashbox.of.the.day').create(cr, uid, [ref('point_of_sale.account_bank_statement_st0')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-all_closed_cash_box_of_the_day_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Sales User Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os, time
    data_dict = {'model':'ir.ui.menu', 'form':{'date_start': time.strftime('%Y-%m-%d'), 'date_end': time.strftime('%Y-%m-%d'),'user_id':[ref('base.user_root')] }}
    (data, format) = netsvc.LocalService('report.pos.sales.user').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], data_dict, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-sales_user_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Sales User Today Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os, time
    data_dict = {'model':'ir.ui.menu', 'form':{'user_id':[ref('base.user_root')] }}
    (data, format) = netsvc.LocalService('report.pos.sales.user.today').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], data_dict, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-sales_user_today_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Payment Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os, time
    (data, format) = netsvc.LocalService('report.pos.payment.report').create(cr, uid, [ref('point_of_sale.pos_order_pos0')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-payment_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Payment User Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os, time
    data_dict = {'model':'ir.ui.menu', 'form':{'user_id':[ref('base.user_root'),ref('base.user_demo')] }}
    (data, format) = netsvc.LocalService('report.pos.payment.report.user').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], data_dict, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-payment_user_report'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on a Point of Sale, we will print a POS Today's Sales of Current User Report
-
  !python {model: pos.order}: |
    import netsvc, tools, os, time
    (data, format) = netsvc.LocalService('report.pos.sales.user.today.current.user').create(cr, uid, [ref('point_of_sale.order_pos1'), ref('point_of_sale.order_pos2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'point_of_sale-sales_today_current_user_report'+format), 'wb+').write(data)
