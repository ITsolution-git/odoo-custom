-

  I create Demanding Corp.
- 
  !record {model: res.partner, id: demanding}:
    name: Demanding Corp.
- 
  I create contact address for Demanding Corp.
- 
  !record {model: res.partner.address, id: demanding_address}:
    partner_id: demanding
    street: Requirement St. 11
    type: contact
-
  I define a product category
- 
  !record {model: product.category, id: categ_test}:
    name: Products for test
-
  I define a product.
- 
  !record {model: product.product, id: test_product}:
    categ_id: categ_test
    cost_method: standard
    mes_type: fixed
    name: Dummy Product
    procure_method: make_to_order
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
-
  In order to test the Requested Date feature in Sale Orders in OpenERP,
  I create a Sale Order having Requested Date on 2010-12-20
-
  !record {model: sale.order, id: sale_order_requested_date1}:
    date_order: '2010-12-01'
    requested_date: '2010-07-17'
    invoice_quantity: order
    name: Test_ReqDate
    order_line:
      - name: Dummy product
        price_unit: 200
        product_uom: product.product_uom_unit
        product_uom_qty: 500.0
        state: draft
        delay: 7.0
        product_id: test_product
        product_uos_qty: 500.0
        type: make_to_order
    order_policy: manual
    partner_id: demanding
    partner_invoice_id: demanding_address
    partner_order_id: demanding_address
    partner_shipping_id: demanding_address
    picking_policy: direct
    pricelist_id: product.list0
    shop_id: sale.shop
- 
  I confirm the Sale Order.
- 
  !workflow {
    model: sale.order, action: order_confirm,
    ref: sale_order_requested_date1
  }
-
  I verify that the Procurements and Stock Moves have been generated with the
  correct date
-
  !python {model: sale.order}: |
    from datetime import datetime, timedelta
    from tools import DEFAULT_SERVER_DATE_FORMAT, DEFAULT_SERVER_DATETIME_FORMAT
    
    so = self.browse(cr, uid, ref("sale_order_requested_date1"))
    security_delay = timedelta(days=so.shop_id.company_id.security_lead)
    requested_date = datetime.strptime(so.requested_date,
                                       DEFAULT_SERVER_DATE_FORMAT)
    right_date = (requested_date - security_delay).strftime(
                                                DEFAULT_SERVER_DATETIME_FORMAT)
    for line in so.order_line:
      assert line.procurement_id, "No Procurement was created"
      assert line.procurement_id.date_planned == right_date, "The planned date for the Procurement Order is wrong"
      assert line.procurement_id.move_id.date_expected == right_date, "The expected date for the Stock Move is wrong"
