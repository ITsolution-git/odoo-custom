-
  I make "Collect Requirement and Make SRS" in open state.
-
  !python {model: project.phase}: |
    self.set_open(cr, uid, [ref("project_phase_1")])
-
  I check state of phase after put in open.
-
  !assert {model: project.phase, id: project_phase_1, severity: error, string: Phase should be in open state}:
       - state == "open"
-
  I make Phase in pending state because of resource problem.
-
  !python {model: project.phase}: |
    self.set_pending(cr, uid, [ref("project_phase_1")])
-
  I check state of phase after put in pending.
-
  !assert {model: project.phase, id: project_phase_1, severity: error, string: Phase should be in pending state}:
       - state == "pending"
-
  I make Phase in cancel state.
-
  !python {model: project.phase}: |
    self.set_cancel(cr, uid, [ref("project_phase_1")])
-
  I check state of phase after put in cancel.
-
  !assert {model: project.phase, id: project_phase_1, severity: error, string: Phase should be in cancel state}:
       - state == "cancelled"
-
  I make Phase "Design Model" in done state.
-
  !python {model: project.phase}: |
    self.set_done(cr, uid, [ref("project_phase_2")])
-
  I check state of phase after put in done.
-
  !assert {model: project.phase, id: project_phase_2, severity: error, string: Phase should be in done state}:
       - state == "done"