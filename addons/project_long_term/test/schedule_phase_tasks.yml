- 
  Create project 'Develop an outlook-openerp synchronization plugin'
- 
  !record {model: project.project, id: project_project_project4}:
    name: Develop an outlook-openerp synchronization plugin
    members:
      - project.res_users_project_manager
      - project.res_users_technical_leader
      - project.res_users_developer
      - project.res_users_designer
      - project.res_users_tester
      - project.res_users_analyst
      - project.res_users_finacial_manager
- 
  Create phase 'Develop GUI' in Outlook
- 
  !record {model: project.phase, id: project_phase_phase0}:
    date_start: !eval time.strftime("%Y-%m-%d")
    duration: 200.0
    name: Develop GUI in Outlook
    product_uom: product.uom_day
    project_id: project_project_project4
    state: draft
    resource_ids:
      - resource_id: project_long_term.resource_analyst
      - resource_id: project_long_term.resource_developer
      - resource_id: project_long_term.resource_designer
      - resource_id: project_long_term.resource_tester
      - resource_id: project_long_term.resource_project_manager
    
- 
  Create the phase task 'Develop GUI for Server Configuration'
- 
  !record {model: project.task, id: project_task_t0}:
    name: Develop GUI for Server Configuration
    planned_hours: 20.0
    remaining_hours: 20.0
    state: draft
    phase_id: project_phase_phase0
    project_id: project_project_project4

    
- 
  Create the phase task 'Develop GUI for Modules Configuration'
- 
  !record {model: project.task, id: project_task_t1}:
    name: Develop GUI for Modules Configuration
    planned_hours: 25.0
    remaining_hours: 25.0
    state: draft
    phase_id: project_phase_phase0
    project_id: project_project_project4

- 
  Create the phase task 'Develop GUI for OpenERP Synchronisation'
- 
  !record {model: project.task, id: project_task_t2}:
    name: Develop GUI for OpenERP Synchronisation
    planned_hours: 30.0
    remaining_hours: 30.0
    state: draft
    phase_id: project_phase_phase0
    project_id: project_project_project4

- 
  Create the phase task 'Design required GUI/Menus'
- 
  !record {model: project.task, id: project_task_3}:
    name: Design required GUI/Menus
    planned_hours: 25.0
    remaining_hours: 25.0
    state: draft
    phase_id: project_phase_phase0
    project_id: project_project_project4
    
- 
  Schedule phase tasks
- 
  !python {model: project.phase}: |
      res = self.schedule_tasks(cr, uid, [ref("project_phase_phase0")])

-
  Check if tasks scheduled, check that either of task's start_date, end_date and user_id is not null
-
  !python {model: project.phase}: |
     phase = self.browse(cr, uid, [ref("project_phase_phase0")])[0]
     for task in phase.task_ids:
        if (not task.date_start) or (not task.date_end):
           raise AssertionError("Phase Tasks not scheduled: %d uid=%r start=%r end=%r" % \
                    (task.id, task.user_id, task.date_start, task.date_end))
