-
  In order to test the PDF reports defined on Auction, we will print an Auction Artist Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.artists').create(cr, uid, [ref('auction.auction_deposit_1_lot_1'),ref('auction.auction_deposit_1_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-auction_artist_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print an Auction Bid Report
- 
  !python {model: auction.bid}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.bids').create(cr, uid, [ref('auction.auction_date_1_bid_3'),ref('auction.auction_date_1_bid_4')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-auction_bid_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print a Lots List Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.lots.list').create(cr, uid, [ref('auction.auction_deposit_3_lot_1'),ref('auction.auction_deposit_3_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-lots_list_report.'+format), 'wb+').write(data)
        
-
  In order to test the PDF reports defined on Auction, we will print a Lots Inventory Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.lots.list.inventory').create(cr, uid, [ref('auction.auction_deposit_4_lot_1'),ref('auction.auction_deposit_4_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-lots_inventory_report.'+format), 'wb+').write(data)
        
-
  In order to test the PDF reports defined on Auction, we will print a Deposit Seller Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.deposit.seller').create(cr, uid, [ref('auction.auction_deposit_5_lot_1'),ref('auction.auction_deposit_5_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-deposit_seller_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print a Catalogue List Report
-
  !python {model: auction.dates}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.cat_flagy').create(cr, uid, [ref('auction.auction_date_1'),ref('auction.auction_date_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-catalog_list_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print a Buyer Form Report
-
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.buyer_form_report').create(cr, uid, [ref('auction.auction_deposit_6_lot_1'),ref('auction.auction_deposit_6_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-buyer_form_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print a report of Bids Phones Details
-
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.bids.phones.details').create(cr, uid, [ref('auction.auction_deposit_7_lot_1'),ref('auction.auction_deposit_7_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-bids_phones_details_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print an Auction Total Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.total.rml').create(cr, uid, [ref('auction.auction_deposit_8_lot_1'),ref('auction.auction_deposit_8_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-auction_total_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print an Auction Result Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.result').create(cr, uid, [ref('auction.auction_deposit_9_lot_1'),ref('auction.auction_deposit_9_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-auction_result_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print an Auction Lot Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.bids.lots').create(cr, uid, [ref('auction.auction_deposit_10_lot_1'),ref('auction.auction_deposit_10_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-auction_lot_report.'+format), 'wb+').write(data)        

-
  In order to test the PDF reports defined on Auction, we will print an Auction Buyer List Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.buyer.list').create(cr, uid, [ref('auction.auction_deposit_10_lot_1'),ref('auction.auction_deposit_10_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-buyer_list_report.'+format), 'wb+').write(data)        

-
  In order to test the PDF reports defined on Auction, we will print an Auction Flagey Hussier Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.flagey.huissier').create(cr, uid, [ref('auction.auction_deposit_3_lot_1'),ref('auction.auction_deposit_10_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-flagey_hussier_report.'+format), 'wb+').write(data)

-
  In order to test the PDF reports defined on Auction, we will print an Auction Seller Form Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.seller_form_report').create(cr, uid, [ref('auction.auction_deposit_3_lot_1'),ref('auction.auction_deposit_10_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-seller_form_report.'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on Auction, we will a print Buyer Result Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.buyer.result').create(cr, uid, [ref('auction.auction_deposit_3_lot_1'),ref('auction.auction_deposit_10_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-buyer_result_report.'+format), 'wb+').write(data)
-
  In order to test the PDF reports defined on Auction, we will print a Catalogue Report
- 
  !python {model: auction.lots}: |
    import netsvc, tools, os
    (data, format) = netsvc.LocalService('report.auction.catelog').create(cr, uid, [ref('auction.auction_deposit_3_lot_1'),ref('auction.auction_deposit_10_lot_2')], {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'auction-catelog_report.'+format), 'wb+').write(data)