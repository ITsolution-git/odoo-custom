-
  I call onchange event to change costing of registration base on event.
-
  !python {model: event.registration}: |
    self.onchange_event(cr, uid, ref('reg_1_1'), ref("event_1"), [])
-
  I call onchange event to change the partner of event registration.
-
  !python {model: event.registration}: |
    self.onchange_partner_id(cr, uid, ref('reg_1_1'), ref("base.res_partner_asus"), ref("event_1"), email=False)
-
  I call onchange event to change the product of event.
-
  !python {model: event.event}: |
    self.onchange_product(cr, uid, ref("event_1"), ref("event_product_0"))
-
  I call onchange event to change the team of event.
-
  !python {model: event.event}: |
    self.do_team_change(cr, uid, ref("event_1"), ref("crm.section_sales_department"))
-
  I call onchange event on partner registration.
-
  !python {model: partner.event.registration}: |
    context.update({'active_id': ref("base.res_partner_ericdubois0")})
    self.onchange_event_id(cr, uid, 1, ref("event_1"), context=context)
-
  Copy of event.
-
  !python {model: event.event}: |
    try:
      self.copy(cr, uid, ref("event_2"))
    except:
      pass