-
  In order to test the cancel sale order.
-
  I try to cancel sale order and It's order policy is Manual.
-
  !python {model: sale.order}: |
    try:
      self.action_cancel(cr, uid, [ref("order4")])
    except Exception,e:
      pass
-
  For cancel the sale order I have to cancel the invoice of sale order.
-
  !python {model: sale.order}: |
    import netsvc
    invoice_ids = [x.id for x in self.browse(cr, uid, ref("order4")).invoice_ids]
    wf_service = netsvc.LocalService("workflow")
    for invoice in invoice_ids:
      wf_service.trg_validate(uid, 'account.invoice', invoice, 'invoice_cancel', cr)
-
  I check order status in "Invoice Exception" and related invoice is in cancel state.
-
  !python {model: sale.order}: |
    order = self.browse(cr, uid, ref("order4"))
    assert order.invoice_ids[0].state == "cancel","order's related invoice should be cancelled"
    assert order.state == "invoice_except", "order should be in Invoice Exception state after cancel Invoice"
-
  Now need to cancel the rekated picking of sale order.
-
  !python {model: sale.order}: |
    import netsvc
    order = self.browse(cr, uid, ref("order4"))
    picking_ids = [x.id for x in self.browse(cr, uid, ref("order4")).picking_ids]
    wf_service = netsvc.LocalService("workflow")
    for picking in picking_ids:
      wf_service.trg_validate(uid, 'stock.picking', picking, 'button_cancel', cr)
-
  I check order status in "Shipping Exception" and related picking is in cancel state.
-
  !python {model: sale.order}: |
    order = self.browse(cr, uid, ref("order4"))
    assert order.picking_ids[0].state == "cancel","order's related invoice should be cancelled"
    assert order.state == "shipping_except", "order should be in Invoice Exception state after cancel Invoice"
-
  Now I am able to cancel this sale order.
-
  !python {model: sale.order}: |
    self.action_cancel(cr, uid, [ref("order4")])
-
  I check that sale order is cancelled.
-
  !assert {model: sale.order, id: order4}:
    - state == 'cancel'
-
  Again set cancelled order to draft.
-
  !python {model: sale.order}: |
    self.action_cancel_draft(cr, uid, [ref("order4")]) 
