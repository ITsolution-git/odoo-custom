-
  !python {model: ir.model.data, id: False} : |
      journal_id = self.env['account.journal'].search([('type', '=', 'sale')], limit=1).id
      account_recv_id = self.env['account.account'].search([('user_type_id', '=', ref('account.data_account_type_receivable'))], limit=1).id
      account_sale_id = self.env['account.account'].search([('user_type_id', '=', ref('account.data_account_type_revenue')), ('tag_ids', 'in', [ref('account.account_tag_operating')])], limit=1).id
      if not account_sale_id:
          account_sale_id = self.env['account.account'].search([('user_type_id', '=', ref('account.data_account_type_revenue'))], limit=1).id
      if journal_id and account_recv_id:
          vals = {
              'currency': ref('base.EUR'),
              'company_id': ref('base.main_company'),
              'partner_id': ref('base.res_partner_1'),
              'journal_id': journal_id,
              'team_id': ref('sales_team.team_sales_department'),
              'state': 'draft',
              'type': 'out_invoice',
              'account_id': account_recv_id,
              'name': 'Test invoice 1',
          }
          self._update('account.invoice', 'sale', vals, 'test_crm_sale_invoice_1')
          vals = {
              'currency': ref('base.EUR'),
              'company_id': ref('base.main_company'),
              'partner_id': ref('base.res_partner_1'),
              'journal_id': journal_id,
              'team_id': ref('sales_team.crm_team_1'),
              'state': 'draft',
              'type': 'out_invoice',
              'account_id': account_recv_id,
              'name': 'Test invoice 2',
          }
          self._update('account.invoice', 'sale', vals, 'test_crm_sale_invoice_2')
          if account_sale_id:
              vals = {
                  'name': '',
                  'product_id': ref('product.consu_delivery_03'),
                  'invoice_id': ref('test_crm_sale_invoice_1'),
                  'price_unit': 250,
                  'quantity': 1,
                  'account_id': account_sale_id,
              }
              self._update('account.invoice.line', 'sale', vals, 'test_crm_sale_invoice_1_line_1')
              vals = {
                  'name': '',
                  'product_id': ref('product.consu_delivery_02'),
                  'invoice_id': ref('test_crm_sale_invoice_1'),
                  'price_unit': 800,
                  'quantity': 2,
                  'account_id': account_sale_id,
              }
              self._update('account.invoice.line', 'sale', vals, 'test_crm_sale_invoice_1_line_2')
              vals = {
                  'name': '',
                  'product_id': ref('product.consu_delivery_01'),
                  'invoice_id': ref('test_crm_sale_invoice_1'),
                  'price_unit': 4800,
                  'quantity': 4,
                  'account_id': account_sale_id,
              }
              self._update('account.invoice.line', 'sale', vals, 'test_crm_sale_invoice_1_line_3')
              vals = {
                  'name': '',
                  'product_id': ref('product.consu_delivery_01'),
                  'invoice_id': ref('test_crm_sale_invoice_2'),
                  'price_unit': 500,
                  'quantity': 1,
                  'account_id': account_sale_id,
              }
              self._update('account.invoice.line', 'sale', vals, 'test_crm_sale_invoice_2_line_1')
              self.env['account.invoice'].browse(ref('test_crm_sale_invoice_1')).signal_workflow('invoice_open')
              self.env['account.invoice'].browse(ref('test_crm_sale_invoice_2')).signal_workflow('invoice_open')
              bank_journal_id = self.env['account.journal'].search([('type', '=', 'bank')], limit=1).id
              if bank_journal_id:
                  bank_journal_id = bank_journal_id
                  self.env['account.invoice'].browse(ref('test_crm_sale_invoice_1')).pay_and_reconcile(bank_journal_id[0], 1850)
                  self.env['account.invoice'].browse(ref('test_crm_sale_invoice_2')).pay_and_reconcile(bank_journal_id[0], 500)
-
