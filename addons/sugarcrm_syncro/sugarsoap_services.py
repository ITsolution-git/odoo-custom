##################################################
# sugarsoap_services.py
# generated by ZSI.generate.wsdl2python
##################################################


from sugarsoap_services_types import *
from osv import osv
from tools.translate import _


try:
    import ZSI
    from ZSI.TCcompound import Struct
    from ZSI import client
except ImportError:
    raise osv.except_osv(_('ZSI Import Error!'), _('Please install SOAP for python - ZSI-2.0-rc3.tar.gz - python-zci'))




# Locator
class sugarsoapLocator:
    sugarsoapPortType_address = "http://localhost/sugarcrm/soap.php"
    def getsugarsoapPortTypeAddress(self):
        return sugarsoapLocator.sugarsoapPortType_address
    def getsugarsoapPortType(self, url=None, **kw):
        return sugarsoapBindingSOAP(url or sugarsoapLocator.sugarsoapPortType_address, **kw)

# Methods
class sugarsoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: create_session
    def create_session(self, request):
        if isinstance(request, create_sessionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/create_session", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=create_sessionResponse.typecode.ofwhat, pyclass=create_sessionResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: end_session
    def end_session(self, request):
        if isinstance(request, end_sessionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/end_session", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=end_sessionResponse.typecode.ofwhat, pyclass=end_sessionResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: contact_by_email
    def contact_by_email(self, request):
        if isinstance(request, contact_by_emailRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/contact_by_email", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=contact_by_emailResponse.typecode.ofwhat, pyclass=contact_by_emailResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: user_list
    def user_list(self, request):
        if isinstance(request, user_listRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/user_list", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=user_listResponse.typecode.ofwhat, pyclass=user_listResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: search
    def search(self, request):
        if isinstance(request, searchRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/search", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=searchResponse.typecode.ofwhat, pyclass=searchResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: track_email
    def track_email(self, request):
        if isinstance(request, track_emailRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/track_email", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=track_emailResponse.typecode.ofwhat, pyclass=track_emailResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: create_contact
    def create_contact(self, request):
        if isinstance(request, create_contactRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/create_contact", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=create_contactResponse.typecode.ofwhat, pyclass=create_contactResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: create_lead
    def create_lead(self, request):
        if isinstance(request, create_leadRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/create_lead", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=create_leadResponse.typecode.ofwhat, pyclass=create_leadResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: create_account
    def create_account(self, request):
        if isinstance(request, create_accountRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/create_account", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=create_accountResponse.typecode.ofwhat, pyclass=create_accountResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: create_opportunity
    def create_opportunity(self, request):
        if isinstance(request, create_opportunityRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/create_opportunity", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=create_opportunityResponse.typecode.ofwhat, pyclass=create_opportunityResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: create_case
    def create_case(self, request):
        if isinstance(request, create_caseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/create_case", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=create_caseResponse.typecode.ofwhat, pyclass=create_caseResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: login
    def login(self, request):
        if isinstance(request, loginRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/login", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=loginResponse.typecode.ofwhat, pyclass=loginResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: is_loopback
    def is_loopback(self, request):
        if isinstance(request, is_loopbackRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/is_loopback", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=is_loopbackResponse.typecode.ofwhat, pyclass=is_loopbackResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: seamless_login
    def seamless_login(self, request):
        if isinstance(request, seamless_loginRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/seamless_login", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=seamless_loginResponse.typecode.ofwhat, pyclass=seamless_loginResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_entry_list
    def get_entry_list(self, request):
        if isinstance(request, get_entry_listRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_entry_list", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_entry_listResponse.typecode.ofwhat, pyclass=get_entry_listResponse.typecode.pyclass)
        try:
            response = self.binding.Receive(typecode)
        except:
            return None
        return response

    # op: get_entry
    def get_entry(self, request):
        if isinstance(request, get_entryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_entry", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_entryResponse.typecode.ofwhat, pyclass=get_entryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_entries
    def get_entries(self, request):
        if isinstance(request, get_entriesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_entries", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_entriesResponse.typecode.ofwhat, pyclass=get_entriesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: set_entry
    def set_entry(self, request):
        if isinstance(request, set_entryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/set_entry", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=set_entryResponse.typecode.ofwhat, pyclass=set_entryResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: set_entries
    def set_entries(self, request):
        if isinstance(request, set_entriesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/set_entries", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=set_entriesResponse.typecode.ofwhat, pyclass=set_entriesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: set_note_attachment
    def set_note_attachment(self, request):
        if isinstance(request, set_note_attachmentRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/set_note_attachment", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=set_note_attachmentResponse.typecode.ofwhat, pyclass=set_note_attachmentResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_note_attachment
    def get_note_attachment(self, request):
        if isinstance(request, get_note_attachmentRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_note_attachment", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_note_attachmentResponse.typecode.ofwhat, pyclass=get_note_attachmentResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: relate_note_to_module
    def relate_note_to_module(self, request):
        if isinstance(request, relate_note_to_moduleRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/relate_note_to_module", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=relate_note_to_moduleResponse.typecode.ofwhat, pyclass=relate_note_to_moduleResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_related_notes
    def get_related_notes(self, request):
        if isinstance(request, get_related_notesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_related_notes", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_related_notesResponse.typecode.ofwhat, pyclass=get_related_notesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: logout
    def logout(self, request):
        if isinstance(request, logoutRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/logout", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=logoutResponse.typecode.ofwhat, pyclass=logoutResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_module_fields
    def get_module_fields(self, request):
        if isinstance(request, get_module_fieldsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_module_fields", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_module_fieldsResponse.typecode.ofwhat, pyclass=get_module_fieldsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_available_modules
    def get_available_modules(self, request):
        if isinstance(request, get_available_modulesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_available_modules", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_available_modulesResponse.typecode.ofwhat, pyclass=get_available_modulesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: update_portal_user
    def update_portal_user(self, request):
        if isinstance(request, update_portal_userRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/update_portal_user", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=update_portal_userResponse.typecode.ofwhat, pyclass=update_portal_userResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: test
    def test(self, request):
        if isinstance(request, testRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/test", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=testResponse.typecode.ofwhat, pyclass=testResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_user_id
    def get_user_id(self, request):
        if isinstance(request, get_user_idRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_user_id", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_user_idResponse.typecode.ofwhat, pyclass=get_user_idResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_user_team_id
    def get_user_team_id(self, request):
        if isinstance(request, get_user_team_idRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_user_team_id", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_user_team_idResponse.typecode.ofwhat, pyclass=get_user_team_idResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_server_time
    def get_server_time(self, request):
        if isinstance(request, get_server_timeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_server_time", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_server_timeResponse.typecode.ofwhat, pyclass=get_server_timeResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_gmt_time
    def get_gmt_time(self, request):
        if isinstance(request, get_gmt_timeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_gmt_time", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_gmt_timeResponse.typecode.ofwhat, pyclass=get_gmt_timeResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_sugar_flavor
    def get_sugar_flavor(self, request):
        if isinstance(request, get_sugar_flavorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_sugar_flavor", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_sugar_flavorResponse.typecode.ofwhat, pyclass=get_sugar_flavorResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_server_version
    def get_server_version(self, request):
        if isinstance(request, get_server_versionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_server_version", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_server_versionResponse.typecode.ofwhat, pyclass=get_server_versionResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_relationships
    def get_relationships(self, request):
        if isinstance(request, get_relationshipsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_relationships", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_relationshipsResponse.typecode.ofwhat, pyclass=get_relationshipsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: set_relationship
    def set_relationship(self, request):
        if isinstance(request, set_relationshipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/set_relationship", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=set_relationshipResponse.typecode.ofwhat, pyclass=set_relationshipResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: set_relationships
    def set_relationships(self, request):
        if isinstance(request, set_relationshipsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/set_relationships", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=set_relationshipsResponse.typecode.ofwhat, pyclass=set_relationshipsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: set_document_revision
    def set_document_revision(self, request):
        if isinstance(request, set_document_revisionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/set_document_revision", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=set_document_revisionResponse.typecode.ofwhat, pyclass=set_document_revisionResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: search_by_module
    def search_by_module(self, request):
        if isinstance(request, search_by_moduleRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/search_by_module", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=search_by_moduleResponse.typecode.ofwhat, pyclass=search_by_moduleResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: sync_get_modified_relationships
    def sync_get_modified_relationships(self, request):
        if isinstance(request, sync_get_modified_relationshipsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/sync_get_modified_relationships", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=sync_get_modified_relationshipsResponse.typecode.ofwhat, pyclass=sync_get_modified_relationshipsResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_modified_entries
    def get_modified_entries(self, request):
        if isinstance(request, get_modified_entriesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_modified_entries", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_modified_entriesResponse.typecode.ofwhat, pyclass=get_modified_entriesResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

    # op: get_attendee_list
    def get_attendee_list(self, request):
        if isinstance(request, get_attendee_listRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost/sugarcrm/soap.php/get_attendee_list", encodingStyle="http://schemas.xmlsoap.org/soap/encoding/", **kw)
        # no output wsaction
        typecode = Struct(pname=None, ofwhat=get_attendee_listResponse.typecode.ofwhat, pyclass=get_attendee_listResponse.typecode.pyclass)
        response = self.binding.Receive(typecode)
        return response

_create_sessionRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_session"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_sessionRequest:
    typecode = _create_sessionRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        return
create_sessionRequest.typecode.pyclass = create_sessionRequest

_create_sessionResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_sessionResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_sessionResponse:
    typecode = _create_sessionResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
create_sessionResponse.typecode.pyclass = create_sessionResponse

_end_sessionRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","end_session"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class end_sessionRequest:
    typecode = _end_sessionRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        return
end_sessionRequest.typecode.pyclass = end_sessionRequest

_end_sessionResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","end_sessionResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class end_sessionResponse:
    typecode = _end_sessionResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
end_sessionResponse.typecode.pyclass = end_sessionResponse

_contact_by_emailRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","contact_by_email"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email_address", aname="_email_address", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class contact_by_emailRequest:
    typecode = _contact_by_emailRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._email_address = None
        return
contact_by_emailRequest.typecode.pyclass = contact_by_emailRequest

_contact_by_emailResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","contact_by_emailResponse"), ofwhat=[ns0.contact_detail_array_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class contact_by_emailResponse:
    typecode = _contact_by_emailResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
contact_by_emailResponse.typecode.pyclass = contact_by_emailResponse

_user_listRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","user_list"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class user_listRequest:
    typecode = _user_listRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        return
user_listRequest.typecode.pyclass = user_listRequest

_user_listResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","user_listResponse"), ofwhat=[ns0.user_detail_array_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class user_listResponse:
    typecode = _user_listResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
user_listResponse.typecode.pyclass = user_listResponse

_searchRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","search"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class searchRequest:
    typecode = _searchRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._name = None
        return
searchRequest.typecode.pyclass = searchRequest

_searchResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","searchResponse"), ofwhat=[ns0.contact_detail_array_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class searchResponse:
    typecode = _searchResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
searchResponse.typecode.pyclass = searchResponse

_track_emailRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","track_email"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="parent_id", aname="_parent_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="contact_ids", aname="_contact_ids", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCtimes.gDate(pname="date_sent", aname="_date_sent", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email_subject", aname="_email_subject", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email_body", aname="_email_body", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class track_emailRequest:
    typecode = _track_emailRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._parent_id = None
        self._contact_ids = None
        self._date_sent = None
        self._email_subject = None
        self._email_body = None
        return
track_emailRequest.typecode.pyclass = track_emailRequest

_track_emailResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","track_emailResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class track_emailResponse:
    typecode = _track_emailResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
track_emailResponse.typecode.pyclass = track_emailResponse

_create_contactRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_contact"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="first_name", aname="_first_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="last_name", aname="_last_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email_address", aname="_email_address", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_contactRequest:
    typecode = _create_contactRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._first_name = None
        self._last_name = None
        self._email_address = None
        return
create_contactRequest.typecode.pyclass = create_contactRequest

_create_contactResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_contactResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_contactResponse:
    typecode = _create_contactResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
create_contactResponse.typecode.pyclass = create_contactResponse

_create_leadRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_lead"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="first_name", aname="_first_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="last_name", aname="_last_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email_address", aname="_email_address", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_leadRequest:
    typecode = _create_leadRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._first_name = None
        self._last_name = None
        self._email_address = None
        return
create_leadRequest.typecode.pyclass = create_leadRequest

_create_leadResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_leadResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_leadResponse:
    typecode = _create_leadResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
create_leadResponse.typecode.pyclass = create_leadResponse

_create_accountRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_account"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="phone", aname="_phone", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="website", aname="_website", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_accountRequest:
    typecode = _create_accountRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._name = None
        self._phone = None
        self._website = None
        return
create_accountRequest.typecode.pyclass = create_accountRequest

_create_accountResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_accountResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_accountResponse:
    typecode = _create_accountResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
create_accountResponse.typecode.pyclass = create_accountResponse

_create_opportunityRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_opportunity"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="amount", aname="_amount", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_opportunityRequest:
    typecode = _create_opportunityRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._name = None
        self._amount = None
        return
create_opportunityRequest.typecode.pyclass = create_opportunityRequest

_create_opportunityResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_opportunityResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_opportunityResponse:
    typecode = _create_opportunityResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
create_opportunityResponse.typecode.pyclass = create_opportunityResponse

_create_caseRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_case"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="name", aname="_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_caseRequest:
    typecode = _create_caseRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._name = None
        return
create_caseRequest.typecode.pyclass = create_caseRequest

_create_caseResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","create_caseResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class create_caseResponse:
    typecode = _create_caseResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
create_caseResponse.typecode.pyclass = create_caseResponse

_loginRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","login"), ofwhat=[ns0.user_auth_Def(pname="user_auth", aname="_user_auth", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="application_name", aname="_application_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class loginRequest:
    typecode = _loginRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_auth = None
        self._application_name = None
        return
loginRequest.typecode.pyclass = loginRequest

_loginResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","loginResponse"), ofwhat=[ns0.set_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class loginResponse:
    typecode = _loginResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
loginResponse.typecode.pyclass = loginResponse

_is_loopbackRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","is_loopback"), ofwhat=[], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class is_loopbackRequest:
    typecode = _is_loopbackRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        return
is_loopbackRequest.typecode.pyclass = is_loopbackRequest

_is_loopbackResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","is_loopbackResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class is_loopbackResponse:
    typecode = _is_loopbackResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
is_loopbackResponse.typecode.pyclass = is_loopbackResponse

_seamless_loginRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","seamless_login"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class seamless_loginRequest:
    typecode = _seamless_loginRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        return
seamless_loginRequest.typecode.pyclass = seamless_loginRequest

_seamless_loginResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","seamless_loginResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class seamless_loginResponse:
    typecode = _seamless_loginResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
seamless_loginResponse.typecode.pyclass = seamless_loginResponse

_get_entry_listRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_entry_list"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="query", aname="_query", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="order_by", aname="_order_by", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="offset", aname="_offset", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="select_fields", aname="_select_fields", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="max_results", aname="_max_results", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="deleted", aname="_deleted", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_entry_listRequest:
    typecode = _get_entry_listRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._query = None
        self._order_by = None
        self._offset = None
        self._select_fields = None
        self._max_results = None
        self._deleted = None
        return
get_entry_listRequest.typecode.pyclass = get_entry_listRequest

_get_entry_listResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_entry_listResponse"), ofwhat=[ns0.get_entry_list_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_entry_listResponse:
    typecode = _get_entry_listResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_entry_listResponse.typecode.pyclass = get_entry_listResponse

_get_entryRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_entry"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="select_fields", aname="_select_fields", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_entryRequest:
    typecode = _get_entryRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._id = None
        self._select_fields = None
        return
get_entryRequest.typecode.pyclass = get_entryRequest

_get_entryResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_entryResponse"), ofwhat=[ns0.get_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_entryResponse:
    typecode = _get_entryResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_entryResponse.typecode.pyclass = get_entryResponse

_get_entriesRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_entries"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="ids", aname="_ids", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="select_fields", aname="_select_fields", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_entriesRequest:
    typecode = _get_entriesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._ids = None
        self._select_fields = None
        return
get_entriesRequest.typecode.pyclass = get_entriesRequest

_get_entriesResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_entriesResponse"), ofwhat=[ns0.get_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_entriesResponse:
    typecode = _get_entriesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_entriesResponse.typecode.pyclass = get_entriesResponse

_set_entryRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_entry"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.name_value_list_Def(pname="name_value_list", aname="_name_value_list", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_entryRequest:
    typecode = _set_entryRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._name_value_list = None
        return
set_entryRequest.typecode.pyclass = set_entryRequest

_set_entryResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_entryResponse"), ofwhat=[ns0.set_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_entryResponse:
    typecode = _set_entryResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
set_entryResponse.typecode.pyclass = set_entryResponse

_set_entriesRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_entries"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.name_value_lists_Def(pname="name_value_lists", aname="_name_value_lists", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_entriesRequest:
    typecode = _set_entriesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._name_value_lists = None
        return
set_entriesRequest.typecode.pyclass = set_entriesRequest

_set_entriesResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_entriesResponse"), ofwhat=[ns0.set_entries_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_entriesResponse:
    typecode = _set_entriesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
set_entriesResponse.typecode.pyclass = set_entriesResponse

_set_note_attachmentRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_note_attachment"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.note_attachment_Def(pname="note", aname="_note", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_note_attachmentRequest:
    typecode = _set_note_attachmentRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._note = None
        return
set_note_attachmentRequest.typecode.pyclass = set_note_attachmentRequest

_set_note_attachmentResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_note_attachmentResponse"), ofwhat=[ns0.set_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_note_attachmentResponse:
    typecode = _set_note_attachmentResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
set_note_attachmentResponse.typecode.pyclass = set_note_attachmentResponse

_get_note_attachmentRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_note_attachment"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_note_attachmentRequest:
    typecode = _get_note_attachmentRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._id = None
        return
get_note_attachmentRequest.typecode.pyclass = get_note_attachmentRequest

_get_note_attachmentResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_note_attachmentResponse"), ofwhat=[ns0.return_note_attachment_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_note_attachmentResponse:
    typecode = _get_note_attachmentResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_note_attachmentResponse.typecode.pyclass = get_note_attachmentResponse

_relate_note_to_moduleRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","relate_note_to_module"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="note_id", aname="_note_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_id", aname="_module_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class relate_note_to_moduleRequest:
    typecode = _relate_note_to_moduleRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._note_id = None
        self._module_name = None
        self._module_id = None
        return
relate_note_to_moduleRequest.typecode.pyclass = relate_note_to_moduleRequest

_relate_note_to_moduleResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","relate_note_to_moduleResponse"), ofwhat=[ns0.error_value_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class relate_note_to_moduleResponse:
    typecode = _relate_note_to_moduleResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
relate_note_to_moduleResponse.typecode.pyclass = relate_note_to_moduleResponse

_get_related_notesRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_related_notes"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_id", aname="_module_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="select_fields", aname="_select_fields", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_related_notesRequest:
    typecode = _get_related_notesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._module_id = None
        self._select_fields = None
        return
get_related_notesRequest.typecode.pyclass = get_related_notesRequest

_get_related_notesResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_related_notesResponse"), ofwhat=[ns0.get_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_related_notesResponse:
    typecode = _get_related_notesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_related_notesResponse.typecode.pyclass = get_related_notesResponse

_logoutRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","logout"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class logoutRequest:
    typecode = _logoutRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        return
logoutRequest.typecode.pyclass = logoutRequest

_logoutResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","logoutResponse"), ofwhat=[ns0.error_value_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class logoutResponse:
    typecode = _logoutResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
logoutResponse.typecode.pyclass = logoutResponse

_get_module_fieldsRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_module_fields"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_module_fieldsRequest:
    typecode = _get_module_fieldsRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        return
get_module_fieldsRequest.typecode.pyclass = get_module_fieldsRequest

_get_module_fieldsResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_module_fieldsResponse"), ofwhat=[ns0.module_fields_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_module_fieldsResponse:
    typecode = _get_module_fieldsResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_module_fieldsResponse.typecode.pyclass = get_module_fieldsResponse

_get_available_modulesRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_available_modules"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_available_modulesRequest:
    typecode = _get_available_modulesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        return
get_available_modulesRequest.typecode.pyclass = get_available_modulesRequest

_get_available_modulesResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_available_modulesResponse"), ofwhat=[ns0.module_list_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_available_modulesResponse:
    typecode = _get_available_modulesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_available_modulesResponse.typecode.pyclass = get_available_modulesResponse

_update_portal_userRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","update_portal_user"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="portal_name", aname="_portal_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.name_value_list_Def(pname="name_value_list", aname="_name_value_list", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class update_portal_userRequest:
    typecode = _update_portal_userRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._portal_name = None
        self._name_value_list = None
        return
update_portal_userRequest.typecode.pyclass = update_portal_userRequest

_update_portal_userResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","update_portal_userResponse"), ofwhat=[ns0.error_value_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class update_portal_userResponse:
    typecode = _update_portal_userResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
update_portal_userResponse.typecode.pyclass = update_portal_userResponse

_testRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","test"), ofwhat=[ZSI.TC.String(pname="string", aname="_string", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class testRequest:
    typecode = _testRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._string = None
        return
testRequest.typecode.pyclass = testRequest

_testResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","testResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class testResponse:
    typecode = _testResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
testResponse.typecode.pyclass = testResponse

_get_user_idRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_user_id"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_user_idRequest:
    typecode = _get_user_idRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        return
get_user_idRequest.typecode.pyclass = get_user_idRequest

_get_user_idResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_user_idResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_user_idResponse:
    typecode = _get_user_idResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_user_idResponse.typecode.pyclass = get_user_idResponse

_get_user_team_idRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_user_team_id"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_user_team_idRequest:
    typecode = _get_user_team_idRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        return
get_user_team_idRequest.typecode.pyclass = get_user_team_idRequest

_get_user_team_idResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_user_team_idResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_user_team_idResponse:
    typecode = _get_user_team_idResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_user_team_idResponse.typecode.pyclass = get_user_team_idResponse

_get_server_timeRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_server_time"), ofwhat=[], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_server_timeRequest:
    typecode = _get_server_timeRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        return
get_server_timeRequest.typecode.pyclass = get_server_timeRequest

_get_server_timeResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_server_timeResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_server_timeResponse:
    typecode = _get_server_timeResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_server_timeResponse.typecode.pyclass = get_server_timeResponse

_get_gmt_timeRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_gmt_time"), ofwhat=[], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_gmt_timeRequest:
    typecode = _get_gmt_timeRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        return
get_gmt_timeRequest.typecode.pyclass = get_gmt_timeRequest

_get_gmt_timeResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_gmt_timeResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_gmt_timeResponse:
    typecode = _get_gmt_timeResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_gmt_timeResponse.typecode.pyclass = get_gmt_timeResponse

_get_sugar_flavorRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_sugar_flavor"), ofwhat=[], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_sugar_flavorRequest:
    typecode = _get_sugar_flavorRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        return
get_sugar_flavorRequest.typecode.pyclass = get_sugar_flavorRequest

_get_sugar_flavorResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_sugar_flavorResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_sugar_flavorResponse:
    typecode = _get_sugar_flavorResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_sugar_flavorResponse.typecode.pyclass = get_sugar_flavorResponse

_get_server_versionRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_server_version"), ofwhat=[], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_server_versionRequest:
    typecode = _get_server_versionRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        return
get_server_versionRequest.typecode.pyclass = get_server_versionRequest

_get_server_versionResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_server_versionResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_server_versionResponse:
    typecode = _get_server_versionResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_server_versionResponse.typecode.pyclass = get_server_versionResponse

_get_relationshipsRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_relationships"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_id", aname="_module_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="related_module", aname="_related_module", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="related_module_query", aname="_related_module_query", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="deleted", aname="_deleted", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_relationshipsRequest:
    typecode = _get_relationshipsRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._module_id = None
        self._related_module = None
        self._related_module_query = None
        self._deleted = None
        return
get_relationshipsRequest.typecode.pyclass = get_relationshipsRequest

_get_relationshipsResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_relationshipsResponse"), ofwhat=[ns0.get_relationships_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_relationshipsResponse:
    typecode = _get_relationshipsResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_relationshipsResponse.typecode.pyclass = get_relationshipsResponse

_set_relationshipRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_relationship"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.set_relationship_value_Def(pname="set_relationship_value", aname="_set_relationship_value", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_relationshipRequest:
    typecode = _set_relationshipRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._set_relationship_value = None
        return
set_relationshipRequest.typecode.pyclass = set_relationshipRequest

_set_relationshipResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_relationshipResponse"), ofwhat=[ns0.error_value_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_relationshipResponse:
    typecode = _set_relationshipResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
set_relationshipResponse.typecode.pyclass = set_relationshipResponse

_set_relationshipsRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_relationships"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.set_relationship_list_Def(pname="set_relationship_list", aname="_set_relationship_list", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_relationshipsRequest:
    typecode = _set_relationshipsRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._set_relationship_list = None
        return
set_relationshipsRequest.typecode.pyclass = set_relationshipsRequest

_set_relationshipsResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_relationshipsResponse"), ofwhat=[ns0.set_relationship_list_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_relationshipsResponse:
    typecode = _set_relationshipsResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
set_relationshipsResponse.typecode.pyclass = set_relationshipsResponse

_set_document_revisionRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_document_revision"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.document_revision_Def(pname="note", aname="_note", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_document_revisionRequest:
    typecode = _set_document_revisionRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._note = None
        return
set_document_revisionRequest.typecode.pyclass = set_document_revisionRequest

_set_document_revisionResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","set_document_revisionResponse"), ofwhat=[ns0.set_entry_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class set_document_revisionResponse:
    typecode = _set_document_revisionResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
set_document_revisionResponse.typecode.pyclass = set_document_revisionResponse

_search_by_moduleRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","search_by_module"), ofwhat=[ZSI.TC.String(pname="user_name", aname="_user_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="password", aname="_password", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="search_string", aname="_search_string", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="modules", aname="_modules", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="offset", aname="_offset", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="max_results", aname="_max_results", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class search_by_moduleRequest:
    typecode = _search_by_moduleRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._user_name = None
        self._password = None
        self._search_string = None
        self._modules = None
        self._offset = None
        self._max_results = None
        return
search_by_moduleRequest.typecode.pyclass = search_by_moduleRequest

_search_by_moduleResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","search_by_moduleResponse"), ofwhat=[ns0.get_entry_list_result_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class search_by_moduleResponse:
    typecode = _search_by_moduleResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
search_by_moduleResponse.typecode.pyclass = search_by_moduleResponse

_sync_get_modified_relationshipsRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","sync_get_modified_relationships"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="related_module", aname="_related_module", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="from_date", aname="_from_date", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="to_date", aname="_to_date", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="offset", aname="_offset", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="max_results", aname="_max_results", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="deleted", aname="_deleted", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_id", aname="_module_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="select_fields", aname="_select_fields", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="ids", aname="_ids", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="relationship_name", aname="_relationship_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="deletion_date", aname="_deletion_date", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="php_serialize", aname="_php_serialize", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class sync_get_modified_relationshipsRequest:
    typecode = _sync_get_modified_relationshipsRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._related_module = None
        self._from_date = None
        self._to_date = None
        self._offset = None
        self._max_results = None
        self._deleted = None
        self._module_id = None
        self._select_fields = None
        self._ids = None
        self._relationship_name = None
        self._deletion_date = None
        self._php_serialize = None
        return
sync_get_modified_relationshipsRequest.typecode.pyclass = sync_get_modified_relationshipsRequest

_sync_get_modified_relationshipsResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","sync_get_modified_relationshipsResponse"), ofwhat=[ns0.get_entry_list_result_encoded_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class sync_get_modified_relationshipsResponse:
    typecode = _sync_get_modified_relationshipsResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
sync_get_modified_relationshipsResponse.typecode.pyclass = sync_get_modified_relationshipsResponse

_get_modified_entriesRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_modified_entries"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="ids", aname="_ids", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.select_fields_Def(pname="select_fields", aname="_select_fields", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_modified_entriesRequest:
    typecode = _get_modified_entriesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._ids = None
        self._select_fields = None
        return
get_modified_entriesRequest.typecode.pyclass = get_modified_entriesRequest

_get_modified_entriesResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_modified_entriesResponse"), ofwhat=[ns0.get_sync_result_encoded_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_modified_entriesResponse:
    typecode = _get_modified_entriesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_modified_entriesResponse.typecode.pyclass = get_modified_entriesResponse

_get_attendee_listRequestTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_attendee_list"), ofwhat=[ZSI.TC.String(pname="session", aname="_session", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="module_name", aname="_module_name", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_attendee_listRequest:
    typecode = _get_attendee_listRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._session = None
        self._module_name = None
        self._id = None
        return
get_attendee_listRequest.typecode.pyclass = get_attendee_listRequest

_get_attendee_listResponseTypecode = Struct(pname=("http://www.sugarcrm.com/sugarcrm","get_attendee_listResponse"), ofwhat=[ns0.get_sync_result_encoded_Def(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.sugarcrm.com/sugarcrm")
class get_attendee_listResponse:
    typecode = _get_attendee_listResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._return = None
        return
get_attendee_listResponse.typecode.pyclass = get_attendee_listResponse
