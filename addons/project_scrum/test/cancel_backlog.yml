-
  In Order to Test process of Backlog cancellation,
-
  I cancel Backlog "Automatic migration system" from draft state.
-
  !python {model: project.scrum.product.backlog}: |
    self.button_cancel(cr, uid, [ref("scrum_product_backlog_0")])
-
  I check state of Backlog after canceled.
-
  !assert {model: project.scrum.product.backlog, id: scrum_product_backlog_0, severity: error, string: backlog should be in cancel state}:
       - state == "cancel"
-
  I cancel Backlog "Editable Trees" from open state.
-
  !python {model: project.scrum.product.backlog}: |
    self.button_cancel(cr, uid, [ref("scrum_product_backlog_7")])
-
  I check state of Backlog after canceled.
-
  !assert {model: project.scrum.product.backlog, id: scrum_product_backlog_7, severity: error, string: backlog should be in cancel state}:
       - state == "cancel"
-
  I put Backlog in pending state because of resource unavailability.
-
  !python {model: project.scrum.product.backlog}: |
    self.button_pending(cr, uid, [ref("scrum_product_backlog_0")])
-
  I check state of Backlog after put in pending.
-
  !assert {model: project.scrum.product.backlog, id: scrum_product_backlog_0, severity: error, string: Backlog should be in pending state}:
       - state == "pending"
-
  I cancel Backlog "Automatic migration system" from pending state.
-
  !python {model: project.scrum.product.backlog}: |
    self.button_cancel(cr, uid, [ref("scrum_product_backlog_0")])
-
  I check state of Backlog after canceled.
-
  !assert {model: project.scrum.product.backlog, id: scrum_product_backlog_0, severity: error, string: backlog should be in cancel state}:
       - state == "cancel"
-
  I Postpone Backlog "Reshape the complete menu" from open state.
-
  !python {model: project.scrum.product.backlog}: |
    self.button_postpone(cr, uid, [ref("scrum_product_backlog_6")])
-
  I check state of Backlog after Postpone.
-
  !assert {model: project.scrum.product.backlog, id: scrum_product_backlog_6, severity: error, string: backlog should be in cancel state}:
       - state == "cancel"