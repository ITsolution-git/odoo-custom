# German translation for openobject-addons
# Copyright (c) 2010 Rosetta Contributors and Canonical Ltd 2010
# This file is distributed under the same license as the openobject-addons package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2010.
#
msgid ""
msgstr ""
"Project-Id-Version: openobject-addons\n"
"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
"POT-Creation-Date: 2011-01-03 16:57+0000\n"
"PO-Revision-Date: 2010-12-29 10:20+0000\n"
"Last-Translator: Thorsten Vocks (OpenBig.org) <thorsten.vocks@big-"
"consulting.net>\n"
"Language-Team: German <de@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2011-01-06 05:33+0000\n"
"X-Generator: Launchpad (build Unknown)\n"

#. module: hr_payroll_account
#: field:hr.payslip,move_line_ids:0
msgid "Accounting Lines"
msgstr "Buchungssätze"

#. module: hr_payroll_account
#: field:hr.payroll.register,bank_journal_id:0
#: field:hr.payslip,bank_journal_id:0
msgid "Bank Journal"
msgstr "Bank Journal"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_contibution_register_line
msgid "Contribution Register Line"
msgstr "Abrechnung Arbeitgeberanteile"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_contibution_register
msgid "Contribution Register"
msgstr "Abrechnung Arbeitgeber / Arbeitnehmer Anteil"

#. module: hr_payroll_account
#: help:hr.employee,analytic_account:0
msgid "Analytic Account for Salary Analysis"
msgstr "Analytisches Konto Mitarbeitervergütungen"

#. module: hr_payroll_account
#: field:hr.payroll.register,journal_id:0
#: field:hr.payslip,journal_id:0
msgid "Expense Journal"
msgstr ""

#. module: hr_payroll_account
#: field:hr.contibution.register.line,period_id:0
msgid "Period"
msgstr "Periode"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_employee
msgid "Employee"
msgstr "Mitarbeiter"

#. module: hr_payroll_account
#: view:hr.payslip:0
msgid "Other Informations"
msgstr "Weitere Information"

#. module: hr_payroll_account
#: field:hr.employee,salary_account:0
msgid "Salary Account"
msgstr "Konto Vergütung"

#. module: hr_payroll_account
#: help:hr.employee,property_bank_account:0
msgid "Select Bank Account from where Salary Expense will be Paid"
msgstr ""

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_payroll_register
msgid "Payroll Register"
msgstr "Personalabrechnung"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_payslip_account_move
msgid "Account Move Link to Pay Slip"
msgstr "Buchung für Mitarbeitervergütung"

#. module: hr_payroll_account
#: view:hr.payslip:0
msgid "Description"
msgstr "Beschreibung"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:330
#, python-format
msgid "Please Confirm all Expense Invoice appear for Reimbursement"
msgstr "Bestätigen Sie alle Spesenrechnungen zwecks Erstattung"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:432
#, python-format
msgid "Please defined partner in bank account for %s !"
msgstr ""
"Bitte definieren Sie den Geschäftspartner für die Bankkontodaten von %s !"

#. module: hr_payroll_account
#: view:hr.payslip:0
msgid "Accounting Informations"
msgstr "Finanzen Informationen"

#. module: hr_payroll_account
#: help:hr.employee,salary_account:0
msgid "Expense account when Salary Expense will be recorded"
msgstr ""

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:429
#, python-format
msgid "Please defined bank account for %s !"
msgstr "Bitte definieren Sie ein Bankkonto für %s !"

#. module: hr_payroll_account
#: model:ir.module.module,description:hr_payroll_account.module_meta_information
msgid ""
"Generic Payroll system Integrated with Accountings\n"
"    * Expanse Encoding\n"
"    * Payment Encoding\n"
"    * Comany Contribution Managemet\n"
"    "
msgstr ""
"Basis Personalabrechnung mit integrierter Personalbuchhaltung.\n"
"    * Aufwandserfassung Arbeitszeiten\n"
"    * Lohn- und Gehaltszahlung an Mitarbeiter\n"
"    * Verwaltung von Arbeitsgeberanteilen.\n"
"    "

#. module: hr_payroll_account
#: model:ir.module.module,shortdesc:hr_payroll_account.module_meta_information
msgid "Human Resource Payroll Accounting"
msgstr "Personalabrechnung"

#. module: hr_payroll_account
#: view:hr.payslip:0
#: field:hr.payslip,move_payment_ids:0
msgid "Payment Lines"
msgstr "Zahlungspositionen"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:273
#: code:addons/hr_payroll_account/hr_payroll_account.py:444
#, python-format
msgid "Please define fiscal year for perticular contract"
msgstr "Bitte definieren Sie das Wirtschaftsjahr für Arbeitsvertrag"

#. module: hr_payroll_account
#: field:hr.payslip.account.move,slip_id:0
#: model:ir.model,name:hr_payroll_account.model_hr_payslip
msgid "Pay Slip"
msgstr "Mitarbeitervergütung"

#. module: hr_payroll_account
#: constraint:hr.employee:0
msgid "Error ! You cannot create recursive Hierarchy of Employees."
msgstr ""
"Fehler ! Sie können keine rekursive Hierachie bei Mitarbeitern definieren."

#. module: hr_payroll_account
#: view:hr.payslip:0
msgid "Account Lines"
msgstr "Buchungspositionen"

#. module: hr_payroll_account
#: field:hr.contibution.register,account_id:0
#: field:hr.holidays.status,account_id:0
#: field:hr.payroll.advice,account_id:0
msgid "Account"
msgstr "Konto"

#. module: hr_payroll_account
#: field:hr.employee,property_bank_account:0
msgid "Bank Account"
msgstr "Bank Konto"

#. module: hr_payroll_account
#: field:hr.payslip.account.move,name:0
msgid "Name"
msgstr "Bezeichnung"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_payslip_line
msgid "Payslip Line"
msgstr "Abrechnungsposition"

#. module: hr_payroll_account
#: view:hr.payslip:0
msgid "Accounting Vouchers"
msgstr "Buchungsbelege"

#. module: hr_payroll_account
#: constraint:hr.employee:0
msgid ""
"Error ! You cannot select a department for which the employee is the manager."
msgstr ""
"Fehler ! Sie können keine Abteilung auswählen, für die dieser Mitarbeiter "
"die Leitung ausübt."

#. module: hr_payroll_account
#: help:hr.payroll.register,period_id:0
#: help:hr.payslip,period_id:0
msgid "Keep empty to use the period of the validation(Payslip) date."
msgstr ""
"Keinen Eintrag vornehmen, um die Periode der Auszahlungsgenehmigung zu buchen"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_payroll_advice
msgid "Bank Advice Note"
msgstr "Auszahlung Vergütung Hinweis"

#. module: hr_payroll_account
#: field:hr.payslip.account.move,move_id:0
msgid "Expense Entries"
msgstr "Aufwandsbuchungen"

#. module: hr_payroll_account
#: field:hr.payslip,move_ids:0
msgid "Accounting vouchers"
msgstr "Buchungsbelege"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:273
#: code:addons/hr_payroll_account/hr_payroll_account.py:280
#: code:addons/hr_payroll_account/hr_payroll_account.py:283
#: code:addons/hr_payroll_account/hr_payroll_account.py:330
#: code:addons/hr_payroll_account/hr_payroll_account.py:444
#: code:addons/hr_payroll_account/hr_payroll_account.py:451
#: code:addons/hr_payroll_account/hr_payroll_account.py:454
#, python-format
msgid "Warning !"
msgstr "Warnung !"

#. module: hr_payroll_account
#: field:hr.employee,employee_account:0
msgid "Employee Account"
msgstr "Mitarbeiter Konto"

#. module: hr_payroll_account
#: field:hr.payslip.line,account_id:0
msgid "General Account"
msgstr "Sachkonto"

#. module: hr_payroll_account
#: field:hr.contibution.register,yearly_total_by_emp:0
msgid "Total By Employee"
msgstr "Gesamtvergütung nach Mitarbeiter"

#. module: hr_payroll_account
#: field:hr.payslip.account.move,sequence:0
msgid "Sequence"
msgstr "Reihenfolge"

#. module: hr_payroll_account
#: field:hr.payroll.register,period_id:0
#: field:hr.payslip,period_id:0
msgid "Force Period"
msgstr "Erzwinge Periode"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_holidays_status
msgid "Leave Type"
msgstr "Abwesenheitstyp"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:280
#: code:addons/hr_payroll_account/hr_payroll_account.py:451
#, python-format
msgid "Fiscal Year is not defined for slip date %s"
msgstr "Geschäftsjahr wurde für die Abrechnung %s nicht definiert"

#. module: hr_payroll_account
#: field:hr.contibution.register,analytic_account_id:0
#: field:hr.employee,analytic_account:0
#: field:hr.holidays.status,analytic_account_id:0
#: field:hr.payroll.structure,account_id:0
#: field:hr.payslip.line,analytic_account_id:0
msgid "Analytic Account"
msgstr "Analytisches Konto"

#. module: hr_payroll_account
#: help:hr.employee,employee_account:0
msgid "Employee Payable Account"
msgstr "Kreditor für Mitarbeiter"

#. module: hr_payroll_account
#: field:hr.contibution.register,yearly_total_by_comp:0
msgid "Total By Company"
msgstr "Gesamtvergütung nach Unternehmen"

#. module: hr_payroll_account
#: model:ir.model,name:hr_payroll_account.model_hr_payroll_structure
msgid "Salary Structure"
msgstr "Vergütungsstruktur"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:550
#, python-format
msgid "Please Configure Partners Receivable Account!!"
msgstr "Bitte konfigurieren Sie für den Partner einen Debitor"

#. module: hr_payroll_account
#: view:hr.contibution.register:0
msgid "Year"
msgstr "Jahr"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:283
#: code:addons/hr_payroll_account/hr_payroll_account.py:454
#, python-format
msgid "Period is not defined for slip date %s"
msgstr "Die Periode wurde nicht für das Abrechnungsdatum %s definiert."

#. module: hr_payroll_account
#: view:hr.payslip:0
msgid "Accounting Details"
msgstr "Finanzen Details"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:533
#, python-format
msgid "Please Configure Partners Payable Account!!"
msgstr "Bitte konfigurieren Sie den Kreditor beim Partner !!"

#. module: hr_payroll_account
#: code:addons/hr_payroll_account/hr_payroll_account.py:429
#: code:addons/hr_payroll_account/hr_payroll_account.py:432
#: code:addons/hr_payroll_account/hr_payroll_account.py:533
#: code:addons/hr_payroll_account/hr_payroll_account.py:550
#, python-format
msgid "Integrity Error !"
msgstr "Integritätsfehler !"

#, python-format
#~ msgid ""
#~ "Period is not defined for slip date %s'%slip.date))\n"
#~ "                period_id = search_periods[0]\n"
#~ "\n"
#~ "            move = {\n"
#~ "                'journal_id': slip.journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'ref':slip.number,\n"
#~ "                'narration': slip.name\n"
#~ "            }\n"
#~ "            move_id = move_pool.create(cr, uid, move, context=context)\n"
#~ "            self.create_voucher(cr, uid, [slip.id], slip.name, move_id)\n"
#~ "\n"
#~ "            line = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': \"By Basic Salary / \" + slip.employee_id.name,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': slip.employee_id.salary_account.id,\n"
#~ "                'debit': slip.basic,\n"
#~ "                'credit': 0.0,\n"
#~ "                'quantity':slip.working_days,\n"
#~ "                'journal_id': slip.journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'analytic_account_id': False,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "\n"
#~ "            #Setting Analysis Account for Basic Salary\n"
#~ "            if slip.employee_id.analytic_account:\n"
#~ "                line['analytic_account_id'] = "
#~ "slip.employee_id.analytic_account.id\n"
#~ "\n"
#~ "            move_line_id = movel_pool.create(cr, uid, line, "
#~ "context=context)\n"
#~ "            line_ids += [move_line_id]\n"
#~ "\n"
#~ "            line = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': \"To Basic Paysble Salary / \" + "
#~ "slip.employee_id.name,\n"
#~ "                'partner_id': partner_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': slip.employee_id.employee_account.id,\n"
#~ "                'debit': 0.0,\n"
#~ "                'quantity':slip.working_days,\n"
#~ "                'credit': slip.basic,\n"
#~ "                'journal_id': slip.journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "            line_ids += [movel_pool.create(cr, uid, line, context=context)]\n"
#~ "\n"
#~ "            for line in slip.line_ids:\n"
#~ "                name = \"[%s] - %s / %s\" % (line.code, line.name, "
#~ "slip.employee_id.name)\n"
#~ "                amount = line.total\n"
#~ "\n"
#~ "                if line.type == 'leaves':\n"
#~ "                    continue\n"
#~ "\n"
#~ "                rec = {\n"
#~ "                    'move_id':move_id,\n"
#~ "                    'name': name,\n"
#~ "                    'date': slip.date,\n"
#~ "                    'account_id': line.account_id.id,\n"
#~ "                    'debit': 0.0,\n"
#~ "                    'credit' : 0.0,\n"
#~ "                    'journal_id' : slip.journal_id.id,\n"
#~ "                    'period_id' :period_id,\n"
#~ "                    'analytic_account_id':False,\n"
#~ "                    'ref':slip.number,\n"
#~ "                    'quantity':1\n"
#~ "                }\n"
#~ "\n"
#~ "                #Setting Analysis Account for Salary Slip Lines\n"
#~ "                if line.analytic_account_id:\n"
#~ "                    rec['analytic_account_id'] = "
#~ "line.analytic_account_id.id\n"
#~ "                else:\n"
#~ "                    rec['analytic_account_id'] = slip.deg_id.account_id.id\n"
#~ "\n"
#~ "                if line.type == 'allowance' or line.type == 'otherpay':\n"
#~ "                    rec['debit'] = amount\n"
#~ "                    if not partner.property_account_payable:\n"
#~ "                        raise osv.except_osv(_('Integrity Error !"
#~ msgstr ""
#~ "Die Periode ist nicht definiert für die Abrechnung %s'%slip.date))\n"
#~ "                period_id = search_periods[0]\n"
#~ "\n"
#~ "            move = {\n"
#~ "                'journal_id': slip.journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'ref':slip.number,\n"
#~ "                'narration': slip.name\n"
#~ "            }\n"
#~ "            move_id = move_pool.create(cr, uid, move, context=context)\n"
#~ "            self.create_voucher(cr, uid, [slip.id], slip.name, move_id)\n"
#~ "\n"
#~ "            line = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': \"By Basic Salary / \" + slip.employee_id.name,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': slip.employee_id.salary_account.id,\n"
#~ "                'debit': slip.basic,\n"
#~ "                'credit': 0.0,\n"
#~ "                'quantity':slip.working_days,\n"
#~ "                'journal_id': slip.journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'analytic_account_id': False,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "\n"
#~ "            #Setting Analysis Account for Basic Salary\n"
#~ "            if slip.employee_id.analytic_account:\n"
#~ "                line['analytic_account_id'] = "
#~ "slip.employee_id.analytic_account.id\n"
#~ "\n"
#~ "            move_line_id = movel_pool.create(cr, uid, line, "
#~ "context=context)\n"
#~ "            line_ids += [move_line_id]\n"
#~ "\n"
#~ "            line = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': \"To Basic Paysble Salary / \" + "
#~ "slip.employee_id.name,\n"
#~ "                'partner_id': partner_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': slip.employee_id.employee_account.id,\n"
#~ "                'debit': 0.0,\n"
#~ "                'quantity':slip.working_days,\n"
#~ "                'credit': slip.basic,\n"
#~ "                'journal_id': slip.journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "            line_ids += [movel_pool.create(cr, uid, line, context=context)]\n"
#~ "\n"
#~ "            for line in slip.line_ids:\n"
#~ "                name = \"[%s] - %s / %s\" % (line.code, line.name, "
#~ "slip.employee_id.name)\n"
#~ "                amount = line.total\n"
#~ "\n"
#~ "                if line.type == 'leaves':\n"
#~ "                    continue\n"
#~ "\n"
#~ "                rec = {\n"
#~ "                    'move_id':move_id,\n"
#~ "                    'name': name,\n"
#~ "                    'date': slip.date,\n"
#~ "                    'account_id': line.account_id.id,\n"
#~ "                    'debit': 0.0,\n"
#~ "                    'credit' : 0.0,\n"
#~ "                    'journal_id' : slip.journal_id.id,\n"
#~ "                    'period_id' :period_id,\n"
#~ "                    'analytic_account_id':False,\n"
#~ "                    'ref':slip.number,\n"
#~ "                    'quantity':1\n"
#~ "                }\n"
#~ "\n"
#~ "                #Setting Analysis Account for Salary Slip Lines\n"
#~ "                if line.analytic_account_id:\n"
#~ "                    rec['analytic_account_id'] = "
#~ "line.analytic_account_id.id\n"
#~ "                else:\n"
#~ "                    rec['analytic_account_id'] = slip.deg_id.account_id.id\n"
#~ "\n"
#~ "                if line.type == 'allowance' or line.type == 'otherpay':\n"
#~ "                    rec['debit'] = amount\n"
#~ "                    if not partner.property_account_payable:\n"
#~ "                        raise osv.except_osv(_('Integrity Error !"

#~ msgid "Invalid XML for View Architecture!"
#~ msgstr "Fehlerhafter xml Quellcode für diese Ansicht !"

#~ msgid "Expanse Journal"
#~ msgstr "Journal Mitarbeiterausgaben"

#, python-format
#~ msgid ""
#~ "Please defined bank account for %s !' % (slip.employee_id.name)))\n"
#~ "\n"
#~ "            if not slip.employee_id.bank_account_id.partner_id:\n"
#~ "                raise osv.except_osv(_('Integrity Error !"
#~ msgstr ""
#~ "Bitte definieren Sie das Bankkonto für  %s !' % (slip.employee_id.name)))\n"
#~ "\n"
#~ "            if not slip.employee_id.bank_account_id.partner_id:\n"
#~ "                raise osv.except_osv(_('Integrity Error !"

#~ msgid ""
#~ "The Object name must start with x_ and not contain any special character !"
#~ msgstr ""
#~ "Die Objektbezeichnung muss mit x_ beginnen und darf keine Sonderzeichen "
#~ "beinhalten!"

#~ msgid "Select Bank Account from where Salary Expanse will be Paid"
#~ msgstr "Wähle Bankkonto für Zahlung der Mitarbeitervergütung"

#~ msgid "Expanse account when Salary Expanse will be recorded"
#~ msgstr "Aufwandskonto, welches gebucht wird bei Vergütungsabrechnung"

#~ msgid ""
#~ "Generic Payroll system Integrated with Accountings\n"
#~ "    * Expense Encoding\n"
#~ "    * Payment Encoding\n"
#~ "    * Company Contribution Management\n"
#~ "    "
#~ msgstr ""
#~ "Basis Integration Personalbuchhaltung\n"
#~ "   * Buchung von Mitarbeitervergütungen   * Buchung von Auszahlungen an "
#~ "Mitarbeiter   * Buchung von Arbeitgeber- und Arbeitnehmeranteilen\n"
#~ "    "

#, python-format
#~ msgid ""
#~ "Fiscal Year is not defined for slip date %s'%slip.date))\n"
#~ "                search_periods = "
#~ "period_pool.search(cr,uid,[('date_start','<=',slip.date),('date_stop','>=',sl"
#~ "ip.date)], context=context)\n"
#~ "                if not search_periods:\n"
#~ "                    raise osv.except_osv(_('Warning !"
#~ msgstr ""
#~ "Wirtschaftsjahr wurde nicht definiert für Abrechnungsdatum %s'%slip.date))\n"
#~ "                search_periods = "
#~ "period_pool.search(cr,uid,[('date_start','<=',slip.date),('date_stop','>=',sl"
#~ "ip.date)], context=context)\n"
#~ "                if not search_periods:\n"
#~ "                    raise osv.except_osv(_('Warning !"

#, python-format
#~ msgid ""
#~ "Period is not defined for slip date %s'%slip.date))\n"
#~ "            period_id = search_periods[0]\n"
#~ "            name = 'Payment of Salary to %s' % (slip.employee_id.name)\n"
#~ "            move = {\n"
#~ "                'journal_id': slip.bank_journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'type':'bank_pay_voucher',\n"
#~ "                'ref':slip.number,\n"
#~ "                'narration': name\n"
#~ "            }\n"
#~ "            move_id = move_pool.create(cr, uid, move, context=context)\n"
#~ "            self.create_voucher(cr, uid, [slip.id], name, move_id)\n"
#~ "\n"
#~ "            name = \"To %s account\" % (slip.employee_id.name)\n"
#~ "            ded_rec = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': name,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': slip.employee_id.property_bank_account.id,\n"
#~ "                'debit': 0.0,\n"
#~ "                'credit' : slip.total_pay,\n"
#~ "                'journal_id' : slip.journal_id.id,\n"
#~ "                'period_id' :period_id,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "            line_ids += [movel_pool.create(cr, uid, ded_rec, "
#~ "context=context)]\n"
#~ "            name = \"By %s account\" % "
#~ "(slip.employee_id.property_bank_account.name)\n"
#~ "            cre_rec = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': name,\n"
#~ "                'partner_id': partner_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': partner.property_account_payable.id,\n"
#~ "                'debit':  slip.total_pay,\n"
#~ "                'credit' : 0.0,\n"
#~ "                'journal_id' : slip.journal_id.id,\n"
#~ "                'period_id' :period_id,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "            line_ids += [movel_pool.create(cr, uid, cre_rec, "
#~ "context=context)]\n"
#~ "\n"
#~ "            other_pay = slip.other_pay\n"
#~ "            #Process all Reambuse Entries\n"
#~ "            for line in slip.line_ids:\n"
#~ "                if line.type == 'otherpay' and line.expanse_id.invoice_id:\n"
#~ "                    if not line.expanse_id.invoice_id.move_id:\n"
#~ "                        raise osv.except_osv(_('Warning !"
#~ msgstr ""
#~ "Periode wurde nicht definiert für Abrechnungsdatum %s'%slip.date))\n"
#~ "            period_id = search_periods[0]\n"
#~ "            name = 'Payment of Salary to %s' % (slip.employee_id.name)\n"
#~ "            move = {\n"
#~ "                'journal_id': slip.bank_journal_id.id,\n"
#~ "                'period_id': period_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'type':'bank_pay_voucher',\n"
#~ "                'ref':slip.number,\n"
#~ "                'narration': name\n"
#~ "            }\n"
#~ "            move_id = move_pool.create(cr, uid, move, context=context)\n"
#~ "            self.create_voucher(cr, uid, [slip.id], name, move_id)\n"
#~ "\n"
#~ "            name = \"To %s account\" % (slip.employee_id.name)\n"
#~ "            ded_rec = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': name,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': slip.employee_id.property_bank_account.id,\n"
#~ "                'debit': 0.0,\n"
#~ "                'credit' : slip.total_pay,\n"
#~ "                'journal_id' : slip.journal_id.id,\n"
#~ "                'period_id' :period_id,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "            line_ids += [movel_pool.create(cr, uid, ded_rec, "
#~ "context=context)]\n"
#~ "            name = \"By %s account\" % "
#~ "(slip.employee_id.property_bank_account.name)\n"
#~ "            cre_rec = {\n"
#~ "                'move_id':move_id,\n"
#~ "                'name': name,\n"
#~ "                'partner_id': partner_id,\n"
#~ "                'date': slip.date,\n"
#~ "                'account_id': partner.property_account_payable.id,\n"
#~ "                'debit':  slip.total_pay,\n"
#~ "                'credit' : 0.0,\n"
#~ "                'journal_id' : slip.journal_id.id,\n"
#~ "                'period_id' :period_id,\n"
#~ "                'ref':slip.number\n"
#~ "            }\n"
#~ "            line_ids += [movel_pool.create(cr, uid, cre_rec, "
#~ "context=context)]\n"
#~ "\n"
#~ "            other_pay = slip.other_pay\n"
#~ "            #Process all Reambuse Entries\n"
#~ "            for line in slip.line_ids:\n"
#~ "                if line.type == 'otherpay' and line.expanse_id.invoice_id:\n"
#~ "                    if not line.expanse_id.invoice_id.move_id:\n"
#~ "                        raise osv.except_osv(_('Warning !"

#, python-format
#~ msgid ""
#~ "Fiscal Year is not defined for slip date %s'%slip.date))\n"
#~ "            search_periods = period_pool.search(cr, uid, "
#~ "[('date_start','<=',slip.date),('date_stop','>=',slip.date)], "
#~ "context=context)\n"
#~ "            if not search_periods:\n"
#~ "                raise osv.except_osv(_('Warning !"
#~ msgstr ""
#~ "Wirtschaftsjahr wurde nicht definiert für Abrechnungsdatum %s'%slip.date))\n"
#~ "            search_periods = period_pool.search(cr, uid, "
#~ "[('date_start','<=',slip.date),('date_stop','>=',slip.date)], "
#~ "context=context)\n"
#~ "            if not search_periods:\n"
#~ "                raise osv.except_osv(_('Warning !"

#~ msgid "Accounting"
#~ msgstr "Finanzbuchhaltung"

#, python-format
#~ msgid ""
#~ "Please defined partner in bank account for %s !' % "
#~ "(slip.employee_id.name)))\n"
#~ "\n"
#~ "            partner = slip.employee_id.bank_account_id.partner_id\n"
#~ "            partner_id = slip.employee_id.bank_account_id.partner_id.id\n"
#~ "\n"
#~ "            period_id = False\n"
#~ "\n"
#~ "            if slip.period_id:\n"
#~ "                period_id = slip.period_id.id\n"
#~ "            else:\n"
#~ "                fiscal_year_ids = fiscalyear_pool.search(cr, uid, [], "
#~ "context=context)\n"
#~ "                if not fiscal_year_ids:\n"
#~ "                    raise osv.except_osv(_('Warning !"
#~ msgstr ""
#~ "Bitte definieren Sie den Partner im Bankkonto für %s !' % "
#~ "(slip.employee_id.name)))\n"
#~ "\n"
#~ "            partner = slip.employee_id.bank_account_id.partner_id\n"
#~ "            partner_id = slip.employee_id.bank_account_id.partner_id.id\n"
#~ "\n"
#~ "            period_id = False\n"
#~ "\n"
#~ "            if slip.period_id:\n"
#~ "                period_id = slip.period_id.id\n"
#~ "            else:\n"
#~ "                fiscal_year_ids = fiscalyear_pool.search(cr, uid, [], "
#~ "context=context)\n"
#~ "                if not fiscal_year_ids:\n"
#~ "                    raise osv.except_osv(_('Warning !"
