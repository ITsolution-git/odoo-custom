<?xml version="1.0" ?>
<openerp>
	<data>
		
		<!--	
			Process	
		-->
		
        <record id="process_process_invoiceworkflow0" model="process.process">
			<field eval="&quot;&quot;&quot;Invoice flow for services companies.&quot;&quot;&quot;" name="note"/>
			<field eval="1" name="active"/>
			<field eval="&quot;&quot;&quot;Invoice Workflow&quot;&quot;&quot;" name="name"/>
		</record>
		
		<!--	
			Process	Node
		-->
	
		<record id="process_node_analytic0" model="process.node">
			<field name="menu_id" ref="account.account_analytic_def_account"/>
			<field name="model_id" ref="account.model_account_analytic_account"/>
			<field eval="&quot;&quot;&quot;subflow&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Analytic&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;From analytic accounts, It creates invoice.&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state in ('draft', 'open', 'pending', 'close')&quot;&quot;&quot;" name="model_states"/>
			<field eval="1" name="flow_start"/>
		</record>
	
		<record id="process_node_draftinvoices0" model="process.node">
			<field name="menu_id" ref="account.menu_invoice_draft"/>
			<field name="model_id" ref="account.model_account_invoice"/>
			<field eval="&quot;&quot;&quot;state&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Draft Invoices&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Proposed invoice to be checked, validated and printed&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state=='draft'&quot;&quot;&quot;" name="model_states"/>
			<field eval="0" name="flow_start"/>
		</record>
	
		<record id="process_node_invoiceinvoice0" model="process.node">
			<field name="menu_id" ref="account.menu_finance_invoice"/>
			<field name="model_id" ref="account.model_account_invoice"/>
			<field eval="&quot;&quot;&quot;state&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Invoice_invoice&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Have a number and entries are generated&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state=='draft'&quot;&quot;&quot;" name="model_states"/>
			<field eval="0" name="flow_start"/>
		</record>
	
		<record id="process_node_accountingentries0" model="process.node">
			<field name="menu_id" ref="account.menu_action_move_line_form"/>
			<field name="model_id" ref="account.model_account_move"/>
			<field eval="&quot;&quot;&quot;state&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Accounting Entries&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Validated accounting entries.&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="0" name="flow_start"/>
		</record>
	
		<record id="process_node_bankstatement0" model="process.node">
			<field name="menu_id" ref="account.menu_bank_statement_tree2"/>
			<field name="model_id" ref="account.model_account_bank_statement"/>
			<field eval="&quot;&quot;&quot;subflow&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Bank Statement&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Statement encoding produces payment entries&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state=='draft'&quot;&quot;&quot;" name="model_states"/>
			<field eval="1" name="flow_start"/>
		</record>
	
		<record id="process_node_paymententries0" model="process.node">
			<field name="menu_id" ref="account.menu_action_move_line_form"/>
			<field name="model_id" ref="account.model_account_move_line"/>
			<field eval="&quot;&quot;&quot;state&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Payment Entries&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Can be draft or validated&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state in ('draft', 'valid')&quot;&quot;&quot;" name="model_states"/>
			<field eval="0" name="flow_start"/>
		</record>
	
		<record id="process_node_reconciliation0" model="process.node">
			<field name="menu_id" ref="account.menu_action_move_line_search"/>
			<field name="model_id" ref="account.model_account_move_reconcile"/>
			<field eval="&quot;&quot;&quot;state&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Reconciliation&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Reconciliation of entries from end of the payment &quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state=='valid'&quot;&quot;&quot;" name="model_states"/>
			<field eval="0" name="flow_start"/>
		</record>
	
		<record id="process_node_paidinvoice0" model="process.node">
			<field name="menu_id" ref="account.menu_action_invoice_tree1"/>
			<field name="model_id" ref="account.model_account_invoice"/>
			<field eval="&quot;&quot;&quot;state&quot;&quot;&quot;" name="kind"/>
			<field eval="&quot;&quot;&quot;Paid invoice&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Paid invoice when reconciled.&quot;&quot;&quot;" name="note"/>
			<field name="process_id" ref="process_process_invoiceworkflow0"/>
			<field eval="&quot;&quot;&quot;object.state=='paid'&quot;&quot;&quot;" name="model_states"/>
			<field eval="0" name="flow_start"/>
		</record>
	
		<!--	
			Process	Transition
		-->
	
		<record id="process_transition_analyticinvoice0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;analytic Invoice&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;From analytic accounts, Create invoice.&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Draft Invoices')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Analytic')]"/>
		</record>
	
		<record id="process_transition_customerinvoice0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;Customer Invoice&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Number of entries are generated&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Invoice_invoice')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Draft Invoices')]"/>
		</record>
	
		<record id="process_transition_validentries0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;Valid Entries&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Valid entries from invoice&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Accounting Entries')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Invoice_invoice')]"/>
		</record>
	
		<record id="process_transition_entriesreconcile0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;Entries Reconcile&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Reconcile Entries.&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Reconciliation')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Accounting Entries')]"/>
		</record>
	
		<record id="process_transition_statemententries0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;Statement Entries&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;From statement, create entries&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Payment Entries')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Bank Statement')]"/>
		</record>
	
		<record id="process_transition_paymentreconcile0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;Payment Reconcile&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Reconcilate the entries from payment&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Reconciliation')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Payment Entries')]"/>
		</record>
	
		<record id="process_transition_reconcilepaid0" model="process.transition">
			<field eval="[(6,0,[])]" name="role_ids"/>
			<field eval="[(6,0,[])]" name="transition_ids"/>
			<field eval="&quot;&quot;&quot;Reconcile Paid&quot;&quot;&quot;" name="name"/>
			<field eval="&quot;&quot;&quot;Paid invoice when reconciled.&quot;&quot;&quot;" name="note"/>
			<field model="process.node" name="target_node_id" search="[('name','=','Paid invoice')]"/>
			<field model="process.node" name="source_node_id" search="[('name','=','Reconciliation')]"/>
		</record>
	
	</data>
</openerp>