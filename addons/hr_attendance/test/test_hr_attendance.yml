-
  In order to test hr_attendance module in OpenERP,  I will first create new attendance reasons and perform Sign In/Sign Out operations.

-
  I create a new employee "Mark Johnson".
-
  !record {model: hr.employee, id: hr_employee_employee0}:
    address_home_id: base.res_partner_address_1
    company_id: base.main_company
    gender: male
    name: Mark Johnson
    user_id: base.user_root

-
  I create a new attendance reason "Login" for Sign In.
-
  !record {model: hr.action.reason, id: hr_action_reason_login0}:
    name: Login
    action_type: sign_in
-
  I create second attendance reason "Logout" for Sign Out.
-
  !record {model: hr.action.reason, id: hr_action_reason_logout0}:
    name: Logout
    action_type: sign_out
-
  Now, at the time of login, I create an attendance with "Sign In" action and proper reason.
-
  !record {model: hr.attendance, id: hr_attendance_0}:
    action: sign_in
    action_desc: 'hr_action_reason_login0'
    employee_id: 'hr_employee_employee0'
    name: !eval "'%s-01-01 19:08:08' %(datetime.now().year)"
-
  I check that Employee state is "Present".
-
  !assert {model: hr.employee, id: hr_employee_employee0}:
    - state == 'present'

-
  At the time of logout, I create an attendance with "Sign Out" action.
-
  !record {model: hr.attendance, id: hr_attendance_1}:
    action: sign_out
    employee_id: 'hr_employee_employee0'
    name: !eval "'%s-01-01 19:10:55' %(datetime.now().year)"
-
  I check that Employee state is Absent.
-
  !assert {model: hr.employee, id: hr_employee_employee0}:
    - state == 'absent'

-
  I will use "Sign In/Sign Out" wizard for attendances.
-
  !record {model: hr.sign.in.out, id: hr_sign_in_out_markjohnson0}:
    name: Mark Johnson
    state: absent

-
  I click on "Sign In" button of this wizard to login.
-
 !python {model: hr.sign.in.out}: |
    obj_attendance = self.pool.get('hr.employee')
    emp_id = obj_attendance.search(cr, uid, [('user_id', '=', uid), ('name', '=', "Mark Johnson")])
    if emp_id:
    	employee = obj_attendance.read(cr, uid, emp_id)[0]
    	self.write(cr, uid, [ref('hr_sign_in_out_markjohnson0')], {'name': employee['name'], 'state': employee['state'], 'emp_id': emp_id[0]})
    	self.si_check(cr, uid, [ref("hr_sign_in_out_markjohnson0")], {"active_id": ref("hr_employee_employee0")})

-
  I check that Employee state is "Present".
-
  !assert {model: hr.employee, id: hr_employee_employee0}:
    - state == 'present'

-
  I forgot to "Sign Out" Yesterday and want to sign in Today using This wizard.
-
  !record {model: hr.sign.in.out, id: hr_sign_in_out_markjohnson0}:
    name: Mark Johnson
    state: present
-
  I click on "Sign In" button of this wizard, this will Open a new form which ask for Last Sign Out date.
-
 !python {model: hr.sign.in.out}: |
    obj_attendance = self.pool.get('hr.employee')
    emp_id = obj_attendance.search(cr, uid, [('user_id', '=', uid), ('name', '=', "Mark Johnson")])
    if emp_id:
        employee = obj_attendance.read(cr, uid, emp_id)[0]
        self.write(cr, uid, [ref('hr_sign_in_out_markjohnson0')], {'name': employee['name'], 'state': employee['state'], 'emp_id': emp_id[0]})
        self.si_check(cr, uid, [ref("hr_sign_in_out_markjohnson0")])
-
  I select Last Sign Out date.
-
  !record {model: hr.sign.in.out.ask, id: hr_sign_in_out_ask_markjohnson0}:
    last_time: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    name: Mark Johnson
-
  Now I click on "Sign In" button of this wizard.
-
  !python {model: hr.sign.in.out.ask}: |
    obj_attendance = self.pool.get('hr.employee')
    emp_id = obj_attendance.search(cr, uid, [('user_id', '=', uid), ('name', '=', "Mark Johnson")])
    if emp_id:
        employee = obj_attendance.read(cr, uid, emp_id)[0]
        self.write(cr, uid, [ref('hr_sign_in_out_ask_markjohnson0')], {'emp_id': emp_id[0]})
        #self.sign_in(cr, uid, [ref("hr_sign_in_out_ask_markjohnson0")], {"active_ids": [ref("hr_attendance.menu_hr_attendance_sigh_in_out")]})

-
  Finally i will check the state of the employee is present.
-
  !record {model: hr.sign.in.out, id: hr_sign_in_out_markjohnson0}:
    name: Mark Johnson
    state: present

