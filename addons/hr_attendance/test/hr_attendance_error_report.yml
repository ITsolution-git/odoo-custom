-
  In order to test the PDF reports defined on a HR Attendance Error, we will print a  HR Attendance Error
- 
  !python {model: hr.employee}: |
    import netsvc, tools, os, time
    import datetime
    from mx.DateTime import *
    start = datetime.date.fromtimestamp(time.mktime(time.strptime(time.strftime('%Y-%m-%d'), "%Y-%m-%d")))
    start = DateTime(int(start.year), int(start.month), int(start.day))
    data_dict = {'model': 'hr.employee', 'form': {'init_date': start.strftime('%Y-%m-%d'), 'end_date':start.strftime('%Y-%m-%d'), 'emp_ids': [ref('hr.employee2')], 'max_delay': 120}}
    (data, format) = netsvc.LocalService('report.hr.attendance.error').create(cr, uid, [], data_dict, {'periods': []})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'hr_attendance-error_report.'+format), 'wb+').write(data)

-
 In order to test the PDF reports defined on a HR Attendance By Month, we will print a  HR Attendance By Month
-
  !python {model: hr.employee}: |
    import netsvc, tools, os, time
    import datetime
    from mx.DateTime import *
    start = datetime.date.fromtimestamp(time.mktime(time.strptime(time.strftime('%Y-%m-%d'), "%Y-%m-%d")))
    year=start.year
    month=start.month
    start = DateTime(int(start.year), int(start.month), int(start.day))
    data_dict = {'model': 'ir.ui.menu', 'form': {'month': month, 'year': year }}
    (data, format) = netsvc.LocalService('report.hr.attendance.bymonth').create(cr, uid, [], data_dict, {'active_ids': [ref('hr.employee2')]})
    if tools.config['test_report_directory']:
       file(os.path.join(tools.config['test_report_directory'], 'hr_attendance-by_month_report.'+format), 'wb+').write(data)