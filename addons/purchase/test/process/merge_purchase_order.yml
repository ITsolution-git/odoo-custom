-
  In order to merge purchase orders, I have to check some condition.
  Like PO must in Draft state.
  PO belong to same suppliers.
  PO have same stock location and same price list.
-
  Initially purchase order is in the draft state for merging those orders.
-
  !python {model: purchase.order}: |
    assert self.browse(cr, uid, ref("order_purchase3")).state == 'draft',"Purchase order should be in draft state"
-
  I have to merge the purchase order so for that I create one duplicate order.
-
  !python {model: purchase.order.group}: |
    purchase = self.pool.get('purchase.order')
    purchase_id = purchase.copy(cr, uid, ref("order_purchase3"))
    assert purchase.browse(cr, uid, purchase_id).state == 'draft',"Purchase order(copy) should be draft"
    self.merge_orders(cr, uid, [1], {'active_ids':[ref('order_purchase3'),purchase_id],'active_model': 'purchase.order','active_id':ref('order_purchase3')})
    assert purchase.browse(cr, uid, ref("order_purchase3")).state == 'cancel',"Purchase order should be cancelled"
    assert purchase.browse(cr, uid, purchase_id).state == 'cancel',"After merge purchase order(copy) should be cancelled"