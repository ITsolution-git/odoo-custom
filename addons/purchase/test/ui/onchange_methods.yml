-
  In order to test the private methods of PO, I will call each private methods with propar details.
-
  I want to buy 'Metal Cleats' product for a supplier but the purchase is not confirmed yet. 
-
  !record {model: purchase.order, id: purchase_order_0}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_method: order
    location_id: stock.stock_location_suppliers
    order_line:
      - date_planned: !eval time.strftime('%Y-%m-%d')
        name: Metal Cleats
        price_unit: 100.0
        product_id: product.product_product_metalcleats0
        product_qty: 10.0
        product_uom: product.product_uom_unit
        state: draft
    partner_address_id: base.res_partner_address_7
    partner_id: base.res_partner_4
    pricelist_id: purchase.list0
-
  I cahnge the warehouse for PO.
-
  !python {model: purchase.order}: |
    self.onchange_warehouse_id(cr, uid, [ref('purchase_order_0')],1)
-
  I test for Copy and unlink Purchase order in Draft state.
-
  !python {model: purchase.order}: |
    copy_id = self.copy(cr, uid, ref("purchase_order_0"))
    context.update({'active_ids': copy_id})
    self.unlink(cr, uid, [copy_id], context)
-
  I cahnge the partner for PO.
-
  !python {model: purchase.order}: |
    part = ref('base.res_partner_3')
    self.onchange_partner_id(cr, uid, ref('purchase_order_0'), part)
-
  I click on botton Dummy.
-
  !python {model: purchase.order}: |
    self.button_dummy(cr, uid, [ref('purchase_order_0')], context=None)
-
  I cahnge the partner address for PO.
-
  !python {model: purchase.order}: |
    address_id = ref('base.res_partner_address_8')
    self.onchange_dest_address_id(cr, uid, [ref('purchase_order_0')], address_id)
-
  I Warn the buyer regarding the "Purchase amount".
-
  !python {model: purchase.order}: |
    self.wkf_warn_buyer(cr, uid, [ref('purchase_order_0')])

